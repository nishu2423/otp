{"ast":null,"code":"///&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&7\n\n// import React, { useState } from 'react';\n// import { sendOTP } from '../services/api';\n// import './OTPForm.css';\n\n// const OTPForm = () => {\n//   const [cardNumber, setCardNumber] = useState('');\n//   const [cardHolderName, setCardHolderName] = useState('');\n//   const [cvv, setCvv] = useState('');\n//   const [expirationDate, setExpirationDate] = useState('');\n//   const [phoneNumber, setPhoneNumber] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const handleSendOTP = async () => {\n//     try {\n//       setMessage('Fetching location and sending OTP...');\n//       navigator.geolocation.getCurrentPosition(\n//         async (position) => {\n//           const data = {\n//             cardNumber,\n//             cardHolderName,\n//             cvv,\n//             expirationDate,\n//             registeredPhoneNumber: phoneNumber,\n//             registeredEmail: email,\n//             latitude: position.coords.latitude,\n//             longitude: position.coords.longitude,\n//           };\n//           const response = await sendOTP(data);\n//           setMessage(response.message);\n//         },\n//         (error) => {\n//           setMessage('Failed to get location. Please enable GPS and try again.');\n//         }\n//       );\n//     } catch (error) {\n//       setMessage(`Error sending OTP: ${error.response?.data?.message || error.message}`);\n//     }\n//   };\n\n//   return (\n//     <div className=\"otp-form-container\">\n//       <h2>Enter Card Details to Receive OTP</h2>\n//       <form className=\"otp-form\">\n//         <input type=\"text\" value={cardNumber} onChange={(e) => setCardNumber(e.target.value)} placeholder=\"Card Number\" />\n//         <input type=\"text\" value={cardHolderName} onChange={(e) => setCardHolderName(e.target.value)} placeholder=\"Cardholder Name\" />\n//         <input type=\"password\" value={cvv} onChange={(e) => setCvv(e.target.value)} placeholder=\"CVV\" />\n//         <input type=\"text\" value={expirationDate} onChange={(e) => setExpirationDate(e.target.value)} placeholder=\"Expiration Date (MM/YY)\" />\n//         <input type=\"text\" value={phoneNumber} onChange={(e) => setPhoneNumber(e.target.value)} placeholder=\"Registered Mobile Number\" />\n//         <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Registered Email Address\" />\n//         <button type=\"button\" onClick={handleSendOTP}>Send OTP</button>\n//       </form>\n//       <p>{message}</p>\n//     </div>\n//   );\n// };\n\n// export default OTPForm;\n\n//U&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&7777","map":{"version":3,"names":[],"sources":["E:/project1/otp-location-fraud-detection-frontend/otp-location-fraud-detection-frontend/src/components/OTPForm.js"],"sourcesContent":["///&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&7\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { sendOTP } from '../services/api';\r\n// import './OTPForm.css';\r\n\r\n// const OTPForm = () => {\r\n//   const [cardNumber, setCardNumber] = useState('');\r\n//   const [cardHolderName, setCardHolderName] = useState('');\r\n//   const [cvv, setCvv] = useState('');\r\n//   const [expirationDate, setExpirationDate] = useState('');\r\n//   const [phoneNumber, setPhoneNumber] = useState('');\r\n//   const [email, setEmail] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n\r\n//   const handleSendOTP = async () => {\r\n//     try {\r\n//       setMessage('Fetching location and sending OTP...');\r\n//       navigator.geolocation.getCurrentPosition(\r\n//         async (position) => {\r\n//           const data = {\r\n//             cardNumber,\r\n//             cardHolderName,\r\n//             cvv,\r\n//             expirationDate,\r\n//             registeredPhoneNumber: phoneNumber,\r\n//             registeredEmail: email,\r\n//             latitude: position.coords.latitude,\r\n//             longitude: position.coords.longitude,\r\n//           };\r\n//           const response = await sendOTP(data);\r\n//           setMessage(response.message);\r\n//         },\r\n//         (error) => {\r\n//           setMessage('Failed to get location. Please enable GPS and try again.');\r\n//         }\r\n//       );\r\n//     } catch (error) {\r\n//       setMessage(`Error sending OTP: ${error.response?.data?.message || error.message}`);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"otp-form-container\">\r\n//       <h2>Enter Card Details to Receive OTP</h2>\r\n//       <form className=\"otp-form\">\r\n//         <input type=\"text\" value={cardNumber} onChange={(e) => setCardNumber(e.target.value)} placeholder=\"Card Number\" />\r\n//         <input type=\"text\" value={cardHolderName} onChange={(e) => setCardHolderName(e.target.value)} placeholder=\"Cardholder Name\" />\r\n//         <input type=\"password\" value={cvv} onChange={(e) => setCvv(e.target.value)} placeholder=\"CVV\" />\r\n//         <input type=\"text\" value={expirationDate} onChange={(e) => setExpirationDate(e.target.value)} placeholder=\"Expiration Date (MM/YY)\" />\r\n//         <input type=\"text\" value={phoneNumber} onChange={(e) => setPhoneNumber(e.target.value)} placeholder=\"Registered Mobile Number\" />\r\n//         <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Registered Email Address\" />\r\n//         <button type=\"button\" onClick={handleSendOTP}>Send OTP</button>\r\n//       </form>\r\n//       <p>{message}</p>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default OTPForm;\r\n\r\n//U&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&7777\r\n"],"mappings":"AAAA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}