{"ast":null,"code":"///&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&\n// import axios from 'axios';\n\n// // Set the base URL for your backend API\n// const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api/users';\n\n// // Function to send OTP\n// export const sendOTP = async (data) => {\n//   try {\n//     const response = await axios.post(`${API_URL}/sendOTP`, data);  // Pass full data object\n//     return response.data;  // Return the response data\n//   } catch (error) {\n//     console.error('Error sending OTP:', error.response?.data || error.message);\n//     throw error;\n//   }\n// };\n\n// // Function to verify the transaction\n// export const verifyTransaction = async (data) => {\n//   try {\n//     const response = await axios.post(`${API_URL}/verifyTransaction`, data);  // Pass full data object\n//     return response.data;  // Return the response data\n//   } catch (error) {\n//     console.error('Error verifying transaction:', error.response?.data || error.message);\n//     throw error;\n//   }\n// };\n\n//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&\n\nimport axios from 'axios';\nexport const sendOTP = async data => {\n  try {\n    const response = await axios.post(`${API_URL}/sendOTP`, data);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error('Error sending OTP:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n};\nexport const verifyTransaction = async data => {\n  try {\n    const getLocation = () => new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(position => resolve(position.coords), error => reject(error));\n    });\n    const coords = await getLocation();\n    const locationData = {\n      latitude: coords.latitude,\n      longitude: coords.longitude\n    };\n    const response = await axios.post(`${API_URL}/verifyTransaction`, {\n      ...data,\n      locationData\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    console.error('Error verifying transaction:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","sendOTP","data","response","post","API_URL","error","_error$response","console","message","verifyTransaction","getLocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","coords","locationData","latitude","longitude","_error$response2"],"sources":["E:/project1/otp-location-fraud-detection-frontend/otp-location-fraud-detection-frontend/src/services/api.js"],"sourcesContent":["\r\n///&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&\r\n// import axios from 'axios';\r\n\r\n// // Set the base URL for your backend API\r\n// const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api/users';\r\n\r\n// // Function to send OTP\r\n// export const sendOTP = async (data) => {\r\n//   try {\r\n//     const response = await axios.post(`${API_URL}/sendOTP`, data);  // Pass full data object\r\n//     return response.data;  // Return the response data\r\n//   } catch (error) {\r\n//     console.error('Error sending OTP:', error.response?.data || error.message);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// // Function to verify the transaction\r\n// export const verifyTransaction = async (data) => {\r\n//   try {\r\n//     const response = await axios.post(`${API_URL}/verifyTransaction`, data);  // Pass full data object\r\n//     return response.data;  // Return the response data\r\n//   } catch (error) {\r\n//     console.error('Error verifying transaction:', error.response?.data || error.message);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n\r\n//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&\r\n\r\n\r\nimport axios from 'axios';\r\nexport const sendOTP = async (data) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/sendOTP`, data);  \r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error sending OTP:', error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const verifyTransaction = async (data) => {\r\n  try {\r\n    const getLocation = () => \r\n      new Promise((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (position) => resolve(position.coords),\r\n          (error) => reject(error)\r\n        );\r\n      });\r\n\r\n    const coords = await getLocation();\r\n    const locationData = {\r\n      latitude: coords.latitude,\r\n      longitude: coords.longitude,\r\n    };\r\n\r\n    const response = await axios.post(`${API_URL}/verifyTransaction`, {\r\n      ...data,\r\n      locationData,\r\n    });\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error verifying transaction:', error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,MAAMC,OAAO,GAAG,MAAOC,IAAI,IAAK;EACrC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,IAAI,CAAC,GAAGC,OAAO,UAAU,EAAEH,IAAI,CAAC;IAC7D,OAAOC,QAAQ,CAACD,IAAI;EACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;IAAA,IAAAC,eAAA;IACdC,OAAO,CAACF,KAAK,CAAC,oBAAoB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBL,IAAI,KAAII,KAAK,CAACG,OAAO,CAAC;IAC1E,MAAMH,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMI,iBAAiB,GAAG,MAAOR,IAAI,IAAK;EAC/C,IAAI;IACF,MAAMS,WAAW,GAAGA,CAAA,KAClB,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MAC/BC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAKL,OAAO,CAACK,QAAQ,CAACC,MAAM,CAAC,EACrCb,KAAK,IAAKQ,MAAM,CAACR,KAAK,CACzB,CAAC;IACH,CAAC,CAAC;IAEJ,MAAMa,MAAM,GAAG,MAAMR,WAAW,CAAC,CAAC;IAClC,MAAMS,YAAY,GAAG;MACnBC,QAAQ,EAAEF,MAAM,CAACE,QAAQ;MACzBC,SAAS,EAAEH,MAAM,CAACG;IACpB,CAAC;IAED,MAAMnB,QAAQ,GAAG,MAAMH,KAAK,CAACI,IAAI,CAAC,GAAGC,OAAO,oBAAoB,EAAE;MAChE,GAAGH,IAAI;MACPkB;IACF,CAAC,CAAC;IAEF,OAAOjB,QAAQ,CAACD,IAAI;EACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;IAAA,IAAAiB,gBAAA;IACdf,OAAO,CAACF,KAAK,CAAC,8BAA8B,EAAE,EAAAiB,gBAAA,GAAAjB,KAAK,CAACH,QAAQ,cAAAoB,gBAAA,uBAAdA,gBAAA,CAAgBrB,IAAI,KAAII,KAAK,CAACG,OAAO,CAAC;IACpF,MAAMH,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}