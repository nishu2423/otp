{"ast":null,"code":"var _jsxFileName = \"E:\\\\project1\\\\otp-location-fraud-detection-frontend\\\\otp-location-fraud-detection-frontend\\\\src\\\\components\\\\OTPPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './OTPPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OTPPage = () => {\n  _s();\n  const {\n    otp\n  } = useParams();\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      setMessage(`OTP: ${otp} at location (${position.coords.latitude}, ${position.coords.longitude})`);\n    }, error => {\n      setMessage('Failed to get location. Please enable GPS and try again.');\n    });\n  }, [otp]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"otp-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(OTPPage, \"kNj/UEDITb9lf2A/hytm8NGG//U=\", false, function () {\n  return [useParams];\n});\n_c = OTPPage;\nexport default OTPPage;\nvar _c;\n$RefreshReg$(_c, \"OTPPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","OTPPage","_s","otp","message","setMessage","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/project1/otp-location-fraud-detection-frontend/otp-location-fraud-detection-frontend/src/components/OTPPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './OTPPage.css';\r\n\r\nconst OTPPage = () => {\r\n  const { otp } = useParams();\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        setMessage(`OTP: ${otp} at location (${position.coords.latitude}, ${position.coords.longitude})`);\r\n      },\r\n      (error) => {\r\n        setMessage('Failed to get location. Please enable GPS and try again.');\r\n      }\r\n    );\r\n  }, [otp]);\r\n\r\n  return (\r\n    <div className=\"otp-page-container\">\r\n      <h2>Your OTP</h2>\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OTPPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAI,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC3B,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACdS,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAK;MACZJ,UAAU,CAAC,QAAQF,GAAG,iBAAiBM,QAAQ,CAACC,MAAM,CAACC,QAAQ,KAAKF,QAAQ,CAACC,MAAM,CAACE,SAAS,GAAG,CAAC;IACnG,CAAC,EACAC,KAAK,IAAK;MACTR,UAAU,CAAC,0DAA0D,CAAC;IACxE,CACF,CAAC;EACH,CAAC,EAAE,CAACF,GAAG,CAAC,CAAC;EAET,oBACEH,OAAA;IAAKc,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCf,OAAA;MAAAe,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBnB,OAAA;MAAAe,QAAA,EAAIX;IAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV,CAAC;AAACjB,EAAA,CArBID,OAAO;EAAA,QACKH,SAAS;AAAA;AAAAsB,EAAA,GADrBnB,OAAO;AAuBb,eAAeA,OAAO;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}