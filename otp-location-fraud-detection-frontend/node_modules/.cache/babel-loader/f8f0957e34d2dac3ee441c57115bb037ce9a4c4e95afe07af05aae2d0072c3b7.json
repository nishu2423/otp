{"ast":null,"code":"\n// //$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$44444\n// import React, { useState } from 'react';\n// import { verifyTransaction } from '../services/api';\n// import './OTPVerification.css';\n\n// const OTPVerification = () => {\n//   const [cardNumber, setCardNumber] = useState('');\n//   const [otp, setOtp] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const handleVerifyTransaction = async () => {\n//     try {\n//       setMessage('Fetching location and verifying transaction...');\n//       const position = await new Promise((resolve, reject) => {\n//         navigator.geolocation.getCurrentPosition(resolve, reject);\n//       });\n\n//       const data = {\n//         cardNumber,\n//         otp,\n//         latitude: position.coords.latitude,\n//         longitude: position.coords.longitude,\n//       };\n\n//       const response = await verifyTransaction(data);\n//       setMessage(response.message);\n//     } catch (error) {\n//       if (error.response) {\n//         // Backend returned an error (e.g., 400 for wrong OTP)\n//         if (error.response.status === 400) {\n//           setMessage('Wrong OTP. Please enter the correct OTP.');\n//         } else {\n//           setMessage(`Error: ${error.response.data.message}`);\n//         }\n//       } else if (error.code === error.PERMISSION_DENIED || error.code === error.POSITION_UNAVAILABLE) {\n//         // Geolocation error\n//         setMessage('Failed to get location. Please enable GPS and try again.');\n//       } else {\n//         // Network or other errors\n//         setMessage(`Error: ${error.message}`);\n//       }\n//     }\n//   };\n\n//   return (\n//     <div className=\"otp-verification-container\">\n//       <h2>Verify Your Transaction</h2>\n//       <div className=\"otp-layout\">\n//         <div className=\"card-image\">\n//           <img src=\"https://www.pngplay.com/wp-content/uploads/7/Debit-Card-Transparent-Image.png\" alt=\"Virtual Debit Card\" />\n//         </div>\n//         <div className=\"otp-form\">\n//           <input\n//             type=\"text\"\n//             value={cardNumber}\n//             onChange={(e) => setCardNumber(e.target.value)}\n//             placeholder=\"Card Number\"\n//             className=\"form-control\"\n//           />\n//           <input\n//             type=\"text\"\n//             value={otp}\n//             onChange={(e) => setOtp(e.target.value)}\n//             placeholder=\"Enter OTP\"\n//             className=\"form-control\"\n//           />\n//           <button type=\"button\" onClick={handleVerifyTransaction} className=\"btn btn-primary\">\n//             Verify Transaction\n//           </button>\n//         </div>\n//       </div>\n//       {message && (\n//         <div className={`alert alert-${message.includes('success') ? 'success' : 'danger'} mt-3`}>\n//           {message}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default OTPVerification;\n\n//.......................................................,,,,,,,,,,,,,,,,,,,,,,,,,,,,............\n\n// import React, { useState, useContext } from 'react';\n// import { verifyTransaction } from '../services/api';\n// import { ThemeContext } from '../context/ThemeContext';\n// import './OTPVerification.css';\n\n// const OTPVerification = () => {\n//   const { theme } = useContext(ThemeContext);\n//   const [cardNumber, setCardNumber] = useState('');\n//   const [otp, setOtp] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const handleVerifyTransaction = async () => {\n//     try {\n//       setMessage('Fetching location and verifying transaction...');\n//       const position = await new Promise((resolve, reject) => {\n//         navigator.geolocation.getCurrentPosition(resolve, reject);\n//       });\n\n//       const data = {\n//         cardNumber,\n//         otp,\n//         latitude: position.coords.latitude,\n//         longitude: position.coords.longitude,\n//       };\n\n//       const response = await verifyTransaction(data);\n//       setMessage(response.message);\n//     } catch (error) {\n//       if (error.response) {\n//         // Backend returned an error (e.g., 400 for wrong OTP)\n//         if (error.response.status === 400) {\n//           setMessage('Wrong OTP. Please enter the correct OTP.');\n//         } else {\n//           setMessage(`Error: ${error.response.data.message}`);\n//         }\n//       } else if (error.code === error.PERMISSION_DENIED || error.code === error.POSITION_UNAVAILABLE) {\n//         // Geolocation error\n//         setMessage('Failed to get location. Please enable GPS and try again.');\n//       } else {\n//         // Network or other errors\n//         setMessage(`Error: ${error.message}`);\n//       }\n//     }\n//   };\n\n//   return (\n//     <div className={`otp-verification-container ${theme}`}>\n//       <h2>Verify Your Transaction</h2>\n//       <div className=\"otp-layout\">\n//         <div className=\"card-image\">\n//           <img src=\"https://www.pngplay.com/wp-content/uploads/7/Debit-Card-Transparent-Image.png\" alt=\"Virtual Debit Card\" />\n//         </div>\n//         <div className=\"otp-form\">\n//           <input\n//             type=\"text\"\n//             value={cardNumber}\n//             onChange={(e) => setCardNumber(e.target.value)}\n//             placeholder=\"Card Number\"\n//             className=\"form-control\"\n//           />\n//           <input\n//             type=\"text\"\n//             value={otp}\n//             onChange={(e) => setOtp(e.target.value)}\n//             placeholder=\"Enter OTP\"\n//             className=\"form-control\"\n//           />\n//           <button type=\"button\" onClick={handleVerifyTransaction} className=\"btn btn-primary\">\n//             Verify Transaction\n//           </button>\n//         </div>\n//       </div>\n//       {message && (\n//         <div className={`alert alert-${message.includes('success') ? 'success' : 'danger'} mt-3`}>\n//           {message}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default OTPVerification;\n\n//.....................................,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,","map":{"version":3,"names":[],"sources":["E:/project1/otp-location-fraud-detection-frontend/otp-location-fraud-detection-frontend/src/components/OTPVerification.js"],"sourcesContent":["\r\n// //$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$44444\r\n// import React, { useState } from 'react';\r\n// import { verifyTransaction } from '../services/api';\r\n// import './OTPVerification.css';\r\n\r\n// const OTPVerification = () => {\r\n//   const [cardNumber, setCardNumber] = useState('');\r\n//   const [otp, setOtp] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n\r\n//   const handleVerifyTransaction = async () => {\r\n//     try {\r\n//       setMessage('Fetching location and verifying transaction...');\r\n//       const position = await new Promise((resolve, reject) => {\r\n//         navigator.geolocation.getCurrentPosition(resolve, reject);\r\n//       });\r\n\r\n//       const data = {\r\n//         cardNumber,\r\n//         otp,\r\n//         latitude: position.coords.latitude,\r\n//         longitude: position.coords.longitude,\r\n//       };\r\n\r\n//       const response = await verifyTransaction(data);\r\n//       setMessage(response.message);\r\n//     } catch (error) {\r\n//       if (error.response) {\r\n//         // Backend returned an error (e.g., 400 for wrong OTP)\r\n//         if (error.response.status === 400) {\r\n//           setMessage('Wrong OTP. Please enter the correct OTP.');\r\n//         } else {\r\n//           setMessage(`Error: ${error.response.data.message}`);\r\n//         }\r\n//       } else if (error.code === error.PERMISSION_DENIED || error.code === error.POSITION_UNAVAILABLE) {\r\n//         // Geolocation error\r\n//         setMessage('Failed to get location. Please enable GPS and try again.');\r\n//       } else {\r\n//         // Network or other errors\r\n//         setMessage(`Error: ${error.message}`);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"otp-verification-container\">\r\n//       <h2>Verify Your Transaction</h2>\r\n//       <div className=\"otp-layout\">\r\n//         <div className=\"card-image\">\r\n//           <img src=\"https://www.pngplay.com/wp-content/uploads/7/Debit-Card-Transparent-Image.png\" alt=\"Virtual Debit Card\" />\r\n//         </div>\r\n//         <div className=\"otp-form\">\r\n//           <input\r\n//             type=\"text\"\r\n//             value={cardNumber}\r\n//             onChange={(e) => setCardNumber(e.target.value)}\r\n//             placeholder=\"Card Number\"\r\n//             className=\"form-control\"\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             value={otp}\r\n//             onChange={(e) => setOtp(e.target.value)}\r\n//             placeholder=\"Enter OTP\"\r\n//             className=\"form-control\"\r\n//           />\r\n//           <button type=\"button\" onClick={handleVerifyTransaction} className=\"btn btn-primary\">\r\n//             Verify Transaction\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//       {message && (\r\n//         <div className={`alert alert-${message.includes('success') ? 'success' : 'danger'} mt-3`}>\r\n//           {message}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default OTPVerification;\r\n\r\n//.......................................................,,,,,,,,,,,,,,,,,,,,,,,,,,,,............\r\n\r\n// import React, { useState, useContext } from 'react';\r\n// import { verifyTransaction } from '../services/api';\r\n// import { ThemeContext } from '../context/ThemeContext';\r\n// import './OTPVerification.css';\r\n\r\n// const OTPVerification = () => {\r\n//   const { theme } = useContext(ThemeContext);\r\n//   const [cardNumber, setCardNumber] = useState('');\r\n//   const [otp, setOtp] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n\r\n//   const handleVerifyTransaction = async () => {\r\n//     try {\r\n//       setMessage('Fetching location and verifying transaction...');\r\n//       const position = await new Promise((resolve, reject) => {\r\n//         navigator.geolocation.getCurrentPosition(resolve, reject);\r\n//       });\r\n\r\n//       const data = {\r\n//         cardNumber,\r\n//         otp,\r\n//         latitude: position.coords.latitude,\r\n//         longitude: position.coords.longitude,\r\n//       };\r\n\r\n//       const response = await verifyTransaction(data);\r\n//       setMessage(response.message);\r\n//     } catch (error) {\r\n//       if (error.response) {\r\n//         // Backend returned an error (e.g., 400 for wrong OTP)\r\n//         if (error.response.status === 400) {\r\n//           setMessage('Wrong OTP. Please enter the correct OTP.');\r\n//         } else {\r\n//           setMessage(`Error: ${error.response.data.message}`);\r\n//         }\r\n//       } else if (error.code === error.PERMISSION_DENIED || error.code === error.POSITION_UNAVAILABLE) {\r\n//         // Geolocation error\r\n//         setMessage('Failed to get location. Please enable GPS and try again.');\r\n//       } else {\r\n//         // Network or other errors\r\n//         setMessage(`Error: ${error.message}`);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className={`otp-verification-container ${theme}`}>\r\n//       <h2>Verify Your Transaction</h2>\r\n//       <div className=\"otp-layout\">\r\n//         <div className=\"card-image\">\r\n//           <img src=\"https://www.pngplay.com/wp-content/uploads/7/Debit-Card-Transparent-Image.png\" alt=\"Virtual Debit Card\" />\r\n//         </div>\r\n//         <div className=\"otp-form\">\r\n//           <input\r\n//             type=\"text\"\r\n//             value={cardNumber}\r\n//             onChange={(e) => setCardNumber(e.target.value)}\r\n//             placeholder=\"Card Number\"\r\n//             className=\"form-control\"\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             value={otp}\r\n//             onChange={(e) => setOtp(e.target.value)}\r\n//             placeholder=\"Enter OTP\"\r\n//             className=\"form-control\"\r\n//           />\r\n//           <button type=\"button\" onClick={handleVerifyTransaction} className=\"btn btn-primary\">\r\n//             Verify Transaction\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//       {message && (\r\n//         <div className={`alert alert-${message.includes('success') ? 'success' : 'danger'} mt-3`}>\r\n//           {message}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default OTPVerification;\r\n\r\n//.....................................,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\r\n\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}