{"ast":null,"code":"var _jsxFileName = \"E:\\\\project1\\\\otp-location-fraud-detection-frontend\\\\otp-location-fraud-detection-frontend\\\\src\\\\components\\\\OTPVerification.js\",\n  _s = $RefreshSig$();\n// //$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$44444\n// import React, { useState } from 'react';\n// import { verifyTransaction } from '../services/api';\n// import './OTPVerification.css';\n\n// const OTPVerification = () => {\n//   const [cardNumber, setCardNumber] = useState('');\n//   const [otp, setOtp] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const handleVerifyTransaction = async () => {\n//     try {\n//       setMessage('Fetching location and verifying transaction...');\n//       const position = await new Promise((resolve, reject) => {\n//         navigator.geolocation.getCurrentPosition(resolve, reject);\n//       });\n\n//       const data = {\n//         cardNumber,\n//         otp,\n//         latitude: position.coords.latitude,\n//         longitude: position.coords.longitude,\n//       };\n\n//       const response = await verifyTransaction(data);\n//       setMessage(response.message);\n//     } catch (error) {\n//       if (error.response) {\n//         // Backend returned an error (e.g., 400 for wrong OTP)\n//         if (error.response.status === 400) {\n//           setMessage('Wrong OTP. Please enter the correct OTP.');\n//         } else {\n//           setMessage(`Error: ${error.response.data.message}`);\n//         }\n//       } else if (error.code === error.PERMISSION_DENIED || error.code === error.POSITION_UNAVAILABLE) {\n//         // Geolocation error\n//         setMessage('Failed to get location. Please enable GPS and try again.');\n//       } else {\n//         // Network or other errors\n//         setMessage(`Error: ${error.message}`);\n//       }\n//     }\n//   };\n\n//   return (\n//     <div className=\"otp-verification-container\">\n//       <h2>Verify Your Transaction</h2>\n//       <div className=\"otp-layout\">\n//         <div className=\"card-image\">\n//           <img src=\"https://www.pngplay.com/wp-content/uploads/7/Debit-Card-Transparent-Image.png\" alt=\"Virtual Debit Card\" />\n//         </div>\n//         <div className=\"otp-form\">\n//           <input\n//             type=\"text\"\n//             value={cardNumber}\n//             onChange={(e) => setCardNumber(e.target.value)}\n//             placeholder=\"Card Number\"\n//             className=\"form-control\"\n//           />\n//           <input\n//             type=\"text\"\n//             value={otp}\n//             onChange={(e) => setOtp(e.target.value)}\n//             placeholder=\"Enter OTP\"\n//             className=\"form-control\"\n//           />\n//           <button type=\"button\" onClick={handleVerifyTransaction} className=\"btn btn-primary\">\n//             Verify Transaction\n//           </button>\n//         </div>\n//       </div>\n//       {message && (\n//         <div className={`alert alert-${message.includes('success') ? 'success' : 'danger'} mt-3`}>\n//           {message}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default OTPVerification;\n\n//.......................................................,,,,,,,,,,,,,,,,,,,,,,,,,,,,............\n\n// import React, { useState, useContext } from 'react';\n// import { verifyTransaction } from '../services/api';\n// import { ThemeContext } from '../context/ThemeContext';\n// import './OTPVerification.css';\n\n// const OTPVerification = () => {\n//   const { theme } = useContext(ThemeContext);\n//   const [cardNumber, setCardNumber] = useState('');\n//   const [otp, setOtp] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const handleVerifyTransaction = async () => {\n//     try {\n//       setMessage('Fetching location and verifying transaction...');\n//       const position = await new Promise((resolve, reject) => {\n//         navigator.geolocation.getCurrentPosition(resolve, reject);\n//       });\n\n//       const data = {\n//         cardNumber,\n//         otp,\n//         latitude: position.coords.latitude,\n//         longitude: position.coords.longitude,\n//       };\n\n//       const response = await verifyTransaction(data);\n//       setMessage(response.message);\n//     } catch (error) {\n//       if (error.response) {\n//         // Backend returned an error (e.g., 400 for wrong OTP)\n//         if (error.response.status === 400) {\n//           setMessage('Wrong OTP. Please enter the correct OTP.');\n//         } else {\n//           setMessage(`Error: ${error.response.data.message}`);\n//         }\n//       } else if (error.code === error.PERMISSION_DENIED || error.code === error.POSITION_UNAVAILABLE) {\n//         // Geolocation error\n//         setMessage('Failed to get location. Please enable GPS and try again.');\n//       } else {\n//         // Network or other errors\n//         setMessage(`Error: ${error.message}`);\n//       }\n//     }\n//   };\n\n//   return (\n//     <div className={`otp-verification-container ${theme}`}>\n//       <h2>Verify Your Transaction</h2>\n//       <div className=\"otp-layout\">\n//         <div className=\"card-image\">\n//           <img src=\"https://www.pngplay.com/wp-content/uploads/7/Debit-Card-Transparent-Image.png\" alt=\"Virtual Debit Card\" />\n//         </div>\n//         <div className=\"otp-form\">\n//           <input\n//             type=\"text\"\n//             value={cardNumber}\n//             onChange={(e) => setCardNumber(e.target.value)}\n//             placeholder=\"Card Number\"\n//             className=\"form-control\"\n//           />\n//           <input\n//             type=\"text\"\n//             value={otp}\n//             onChange={(e) => setOtp(e.target.value)}\n//             placeholder=\"Enter OTP\"\n//             className=\"form-control\"\n//           />\n//           <button type=\"button\" onClick={handleVerifyTransaction} className=\"btn btn-primary\">\n//             Verify Transaction\n//           </button>\n//         </div>\n//       </div>\n//       {message && (\n//         <div className={`alert alert-${message.includes('success') ? 'success' : 'danger'} mt-3`}>\n//           {message}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default OTPVerification;\n\n//.....................................,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n\nimport React, { useState, useContext } from 'react';\nimport axios from 'axios'; // Import axios for making HTTP requests\nimport { ThemeContext } from '../context/ThemeContext';\nimport './OTPVerification.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OTPVerification = () => {\n  _s();\n  const {\n    theme\n  } = useContext(ThemeContext);\n  const [cardNumber, setCardNumber] = useState('');\n  const [otp, setOtp] = useState('');\n  const [message, setMessage] = useState('');\n  const handleVerifyTransaction = async () => {\n    try {\n      setMessage('Verifying transaction...');\n\n      // Fetch the device's location\n      const position = await new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject);\n      });\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n\n      // Send OTP, card number, and location to the backend\n      const response = await axios.post('http://localhost:5000/api/users/verifyTransaction', {\n        cardNumber,\n        otp,\n        latitude,\n        longitude\n      });\n\n      // Set the response message\n      setMessage(response.data.message);\n    } catch (error) {\n      if (error.response) {\n        // Backend returned an error (e.g., 400 for wrong OTP)\n        if (error.response.status === 400) {\n          setMessage('Wrong OTP. Please enter the correct OTP.');\n        } else {\n          setMessage(`Error: ${error.response.data.message}`);\n        }\n      } else if (error.code === error.PERMISSION_DENIED || error.code === error.POSITION_UNAVAILABLE) {\n        // Geolocation error\n        setMessage('Failed to get location. Please enable GPS and try again.');\n      } else {\n        // Network or other errors\n        setMessage(`Error: ${error.message}`);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `otp-verification-container ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Verify Your Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"otp-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://www.pngplay.com/wp-content/uploads/7/Debit-Card-Transparent-Image.png\",\n          alt: \"Virtual Debit Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"otp-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: cardNumber,\n          onChange: e => setCardNumber(e.target.value),\n          placeholder: \"Card Number\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: otp,\n          onChange: e => setOtp(e.target.value),\n          placeholder: \"Enter OTP\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleVerifyTransaction,\n          className: \"btn btn-primary\",\n          children: \"Verify Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-${message.includes('success') ? 'success' : 'danger'} mt-3`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n};\n_s(OTPVerification, \"E0i8CQWNWxm/hmOrHy7AtLsYOWA=\");\n_c = OTPVerification;\nexport default OTPVerification;\nvar _c;\n$RefreshReg$(_c, \"OTPVerification\");","map":{"version":3,"names":["React","useState","useContext","axios","ThemeContext","jsxDEV","_jsxDEV","OTPVerification","_s","theme","cardNumber","setCardNumber","otp","setOtp","message","setMessage","handleVerifyTransaction","position","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","latitude","longitude","coords","response","post","data","error","status","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","value","onChange","e","target","placeholder","onClick","includes","_c","$RefreshReg$"],"sources":["E:/project1/otp-location-fraud-detection-frontend/otp-location-fraud-detection-frontend/src/components/OTPVerification.js"],"sourcesContent":["\r\n// //$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$44444\r\n// import React, { useState } from 'react';\r\n// import { verifyTransaction } from '../services/api';\r\n// import './OTPVerification.css';\r\n\r\n// const OTPVerification = () => {\r\n//   const [cardNumber, setCardNumber] = useState('');\r\n//   const [otp, setOtp] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n\r\n//   const handleVerifyTransaction = async () => {\r\n//     try {\r\n//       setMessage('Fetching location and verifying transaction...');\r\n//       const position = await new Promise((resolve, reject) => {\r\n//         navigator.geolocation.getCurrentPosition(resolve, reject);\r\n//       });\r\n\r\n//       const data = {\r\n//         cardNumber,\r\n//         otp,\r\n//         latitude: position.coords.latitude,\r\n//         longitude: position.coords.longitude,\r\n//       };\r\n\r\n//       const response = await verifyTransaction(data);\r\n//       setMessage(response.message);\r\n//     } catch (error) {\r\n//       if (error.response) {\r\n//         // Backend returned an error (e.g., 400 for wrong OTP)\r\n//         if (error.response.status === 400) {\r\n//           setMessage('Wrong OTP. Please enter the correct OTP.');\r\n//         } else {\r\n//           setMessage(`Error: ${error.response.data.message}`);\r\n//         }\r\n//       } else if (error.code === error.PERMISSION_DENIED || error.code === error.POSITION_UNAVAILABLE) {\r\n//         // Geolocation error\r\n//         setMessage('Failed to get location. Please enable GPS and try again.');\r\n//       } else {\r\n//         // Network or other errors\r\n//         setMessage(`Error: ${error.message}`);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"otp-verification-container\">\r\n//       <h2>Verify Your Transaction</h2>\r\n//       <div className=\"otp-layout\">\r\n//         <div className=\"card-image\">\r\n//           <img src=\"https://www.pngplay.com/wp-content/uploads/7/Debit-Card-Transparent-Image.png\" alt=\"Virtual Debit Card\" />\r\n//         </div>\r\n//         <div className=\"otp-form\">\r\n//           <input\r\n//             type=\"text\"\r\n//             value={cardNumber}\r\n//             onChange={(e) => setCardNumber(e.target.value)}\r\n//             placeholder=\"Card Number\"\r\n//             className=\"form-control\"\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             value={otp}\r\n//             onChange={(e) => setOtp(e.target.value)}\r\n//             placeholder=\"Enter OTP\"\r\n//             className=\"form-control\"\r\n//           />\r\n//           <button type=\"button\" onClick={handleVerifyTransaction} className=\"btn btn-primary\">\r\n//             Verify Transaction\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//       {message && (\r\n//         <div className={`alert alert-${message.includes('success') ? 'success' : 'danger'} mt-3`}>\r\n//           {message}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default OTPVerification;\r\n\r\n//.......................................................,,,,,,,,,,,,,,,,,,,,,,,,,,,,............\r\n\r\n// import React, { useState, useContext } from 'react';\r\n// import { verifyTransaction } from '../services/api';\r\n// import { ThemeContext } from '../context/ThemeContext';\r\n// import './OTPVerification.css';\r\n\r\n// const OTPVerification = () => {\r\n//   const { theme } = useContext(ThemeContext);\r\n//   const [cardNumber, setCardNumber] = useState('');\r\n//   const [otp, setOtp] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n\r\n//   const handleVerifyTransaction = async () => {\r\n//     try {\r\n//       setMessage('Fetching location and verifying transaction...');\r\n//       const position = await new Promise((resolve, reject) => {\r\n//         navigator.geolocation.getCurrentPosition(resolve, reject);\r\n//       });\r\n\r\n//       const data = {\r\n//         cardNumber,\r\n//         otp,\r\n//         latitude: position.coords.latitude,\r\n//         longitude: position.coords.longitude,\r\n//       };\r\n\r\n//       const response = await verifyTransaction(data);\r\n//       setMessage(response.message);\r\n//     } catch (error) {\r\n//       if (error.response) {\r\n//         // Backend returned an error (e.g., 400 for wrong OTP)\r\n//         if (error.response.status === 400) {\r\n//           setMessage('Wrong OTP. Please enter the correct OTP.');\r\n//         } else {\r\n//           setMessage(`Error: ${error.response.data.message}`);\r\n//         }\r\n//       } else if (error.code === error.PERMISSION_DENIED || error.code === error.POSITION_UNAVAILABLE) {\r\n//         // Geolocation error\r\n//         setMessage('Failed to get location. Please enable GPS and try again.');\r\n//       } else {\r\n//         // Network or other errors\r\n//         setMessage(`Error: ${error.message}`);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className={`otp-verification-container ${theme}`}>\r\n//       <h2>Verify Your Transaction</h2>\r\n//       <div className=\"otp-layout\">\r\n//         <div className=\"card-image\">\r\n//           <img src=\"https://www.pngplay.com/wp-content/uploads/7/Debit-Card-Transparent-Image.png\" alt=\"Virtual Debit Card\" />\r\n//         </div>\r\n//         <div className=\"otp-form\">\r\n//           <input\r\n//             type=\"text\"\r\n//             value={cardNumber}\r\n//             onChange={(e) => setCardNumber(e.target.value)}\r\n//             placeholder=\"Card Number\"\r\n//             className=\"form-control\"\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             value={otp}\r\n//             onChange={(e) => setOtp(e.target.value)}\r\n//             placeholder=\"Enter OTP\"\r\n//             className=\"form-control\"\r\n//           />\r\n//           <button type=\"button\" onClick={handleVerifyTransaction} className=\"btn btn-primary\">\r\n//             Verify Transaction\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//       {message && (\r\n//         <div className={`alert alert-${message.includes('success') ? 'success' : 'danger'} mt-3`}>\r\n//           {message}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default OTPVerification;\r\n\r\n//.....................................,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\r\n\r\n\r\nimport React, { useState, useContext } from 'react';\r\nimport axios from 'axios'; // Import axios for making HTTP requests\r\nimport { ThemeContext } from '../context/ThemeContext';\r\nimport './OTPVerification.css';\r\n\r\nconst OTPVerification = () => {\r\n  const { theme } = useContext(ThemeContext);\r\n  const [cardNumber, setCardNumber] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleVerifyTransaction = async () => {\r\n    try {\r\n      setMessage('Verifying transaction...');\r\n\r\n      // Fetch the device's location\r\n      const position = await new Promise((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition(resolve, reject);\r\n      });\r\n\r\n      const { latitude, longitude } = position.coords;\r\n\r\n      // Send OTP, card number, and location to the backend\r\n      const response = await axios.post('http://localhost:5000/api/users/verifyTransaction', {\r\n        cardNumber,\r\n        otp,\r\n        latitude,\r\n        longitude,\r\n      });\r\n\r\n      // Set the response message\r\n      setMessage(response.data.message);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        // Backend returned an error (e.g., 400 for wrong OTP)\r\n        if (error.response.status === 400) {\r\n          setMessage('Wrong OTP. Please enter the correct OTP.');\r\n        } else {\r\n          setMessage(`Error: ${error.response.data.message}`);\r\n        }\r\n      } else if (error.code === error.PERMISSION_DENIED || error.code === error.POSITION_UNAVAILABLE) {\r\n        // Geolocation error\r\n        setMessage('Failed to get location. Please enable GPS and try again.');\r\n      } else {\r\n        // Network or other errors\r\n        setMessage(`Error: ${error.message}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`otp-verification-container ${theme}`}>\r\n      <h2>Verify Your Transaction</h2>\r\n      <div className=\"otp-layout\">\r\n        <div className=\"card-image\">\r\n          <img src=\"https://www.pngplay.com/wp-content/uploads/7/Debit-Card-Transparent-Image.png\" alt=\"Virtual Debit Card\" />\r\n        </div>\r\n        <div className=\"otp-form\">\r\n          <input\r\n            type=\"text\"\r\n            value={cardNumber}\r\n            onChange={(e) => setCardNumber(e.target.value)}\r\n            placeholder=\"Card Number\"\r\n            className=\"form-control\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={otp}\r\n            onChange={(e) => setOtp(e.target.value)}\r\n            placeholder=\"Enter OTP\"\r\n            className=\"form-control\"\r\n          />\r\n          <button type=\"button\" onClick={handleVerifyTransaction} className=\"btn btn-primary\">\r\n            Verify Transaction\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {message && (\r\n        <div className={`alert alert-${message.includes('success') ? 'success' : 'danger'} mt-3`}>\r\n          {message}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OTPVerification;"],"mappings":";;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,SAASC,YAAY,QAAQ,yBAAyB;AACtD,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAM,CAAC,GAAGP,UAAU,CAACE,YAAY,CAAC;EAC1C,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,GAAG,EAAEC,MAAM,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACa,OAAO,EAAEC,UAAU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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}