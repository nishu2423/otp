{"ast":null,"code":"var _jsxFileName = \"E:\\\\project1\\\\otp-location-fraud-detection-frontend\\\\otp-location-fraud-detection-frontend\\\\src\\\\components\\\\OTPPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OtpPage = () => {\n  _s();\n  const {\n    token\n  } = useParams();\n  const [otp, setOtp] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        try {\n          const backendUrl = process.env.REACT_APP_BACKEND_URL || `https://${window.location.hostname}:5000`;\n          const response = await fetch(`${backendUrl}/api/users/getOtp/${token}?latitude=${latitude}&longitude=${longitude}`);\n          const data = await response.json();\n          if (response.ok) {\n            setOtp(data.otp);\n          } else {\n            setError(data.message);\n          }\n        } catch (error) {\n          setError('Error fetching OTP');\n        } finally {\n          setLoading(false);\n        }\n      }, () => {\n        setError('Geolocation permission denied.');\n        setLoading(false);\n      });\n    } else {\n      setError('Geolocation is not supported by your browser.');\n      setLoading(false);\n    }\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100vh',\n      fontSize: '20px'\n    },\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Fetching OTP...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your OTP:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '24px',\n          fontWeight: 'bold'\n        },\n        children: otp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(OtpPage, \"WRued/uXh+RDGzN2IZ9d6Q/fO3I=\", false, function () {\n  return [useParams];\n});\n_c = OtpPage;\nexport default OtpPage;\nvar _c;\n$RefreshReg$(_c, \"OtpPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","OtpPage","_s","token","otp","setOtp","error","setError","loading","setLoading","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","backendUrl","process","env","REACT_APP_BACKEND_URL","window","location","hostname","response","fetch","data","json","ok","message","style","display","flexDirection","alignItems","justifyContent","height","fontSize","children","fileName","_jsxFileName","lineNumber","columnNumber","color","fontWeight","_c","$RefreshReg$"],"sources":["E:/project1/otp-location-fraud-detection-frontend/otp-location-fraud-detection-frontend/src/components/OTPPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst OtpPage = () => {\r\n  const { token } = useParams();\r\n  const [otp, setOtp] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (\"geolocation\" in navigator) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        async (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n\r\n          try {\r\n            const backendUrl = process.env.REACT_APP_BACKEND_URL || `https://${window.location.hostname}:5000`;\r\n\r\nconst response = await fetch(\r\n  `${backendUrl}/api/users/getOtp/${token}?latitude=${latitude}&longitude=${longitude}`\r\n);\r\n\r\n            const data = await response.json();\r\n\r\n            if (response.ok) {\r\n              setOtp(data.otp);\r\n            } else {\r\n              setError(data.message);\r\n            }\r\n          } catch (error) {\r\n            setError('Error fetching OTP');\r\n          } finally {\r\n            setLoading(false);\r\n          }\r\n        },\r\n        () => {\r\n          setError('Geolocation permission denied.');\r\n          setLoading(false);\r\n        }\r\n      );\r\n    } else {\r\n      setError('Geolocation is not supported by your browser.');\r\n      setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  return (\r\n    <div style={{\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      height: '100vh',\r\n      fontSize: '20px'\r\n    }}>\r\n      {loading ? (\r\n        <p>Fetching OTP...</p>\r\n      ) : error ? (\r\n        <p style={{ color: 'red' }}>{error}</p>\r\n      ) : (\r\n        <div>\r\n          <h2>Your OTP:</h2>\r\n          <p style={{ fontSize: '24px', fontWeight: 'bold' }}>{otp}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OtpPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}