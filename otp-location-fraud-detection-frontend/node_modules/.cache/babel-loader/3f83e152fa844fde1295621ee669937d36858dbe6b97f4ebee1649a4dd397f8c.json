{"ast":null,"code":"var _jsxFileName = \"E:\\\\project1\\\\otp-location-fraud-detection-frontend\\\\otp-location-fraud-detection-frontend\\\\src\\\\components\\\\OTPPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OTPPage = () => {\n  _s();\n  const {\n    token\n  } = useParams();\n  const [otp, setOtp] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const latitude = position.coords.latitude;\n        const longitude = position.coords.longitude;\n        try {\n          const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/api/users/getOtp/${token}`, {\n            params: {\n              latitude,\n              longitude\n            }\n          });\n          setOtp(response.data.otp);\n        } catch (err) {\n          var _err$response, _err$response$data;\n          setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Error fetching OTP\");\n        }\n      }, error => {\n        setError(\"Location permission denied. Enable GPS to view OTP.\");\n      });\n    } else {\n      setError(\"Geolocation is not supported by your browser.\");\n    }\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"OTP Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Your OTP: \", otp]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 58\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(OTPPage, \"OgSApMg2rhBjxXa+e+uOZfSWLJ8=\", false, function () {\n  return [useParams];\n});\n_c = OTPPage;\nexport default OTPPage;\nvar _c;\n$RefreshReg$(_c, \"OTPPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","OTPPage","_s","token","otp","setOtp","error","setError","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","response","get","process","env","REACT_APP_BACKEND_URL","params","data","err","_err$response","_err$response$data","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["E:/project1/otp-location-fraud-detection-frontend/otp-location-fraud-detection-frontend/src/components/OTPPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst OTPPage = () => {\r\n  const { token } = useParams();\r\n  const [otp, setOtp] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (\"geolocation\" in navigator) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        async (position) => {\r\n          const latitude = position.coords.latitude;\r\n          const longitude = position.coords.longitude;\r\n\r\n          try {\r\n            const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/api/users/getOtp/${token}`, {\r\n              params: { latitude, longitude },\r\n            });\r\n\r\n            setOtp(response.data.otp);\r\n          } catch (err) {\r\n            setError(err.response?.data?.message || \"Error fetching OTP\");\r\n          }\r\n        },\r\n        (error) => {\r\n          setError(\"Location permission denied. Enable GPS to view OTP.\");\r\n        }\r\n      );\r\n    } else {\r\n      setError(\"Geolocation is not supported by your browser.\");\r\n    }\r\n  }, [token]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>OTP Page</h2>\r\n      {error ? <p style={{ color: 'red' }}>{error}</p> : <h3>Your OTP: {otp}</h3>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OTPPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAM,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC7B,MAAM,CAACO,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,IAAI,aAAa,IAAIa,SAAS,EAAE;MAC9BA,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACtC,MAAOC,QAAQ,IAAK;QAClB,MAAMC,QAAQ,GAAGD,QAAQ,CAACE,MAAM,CAACD,QAAQ;QACzC,MAAME,SAAS,GAAGH,QAAQ,CAACE,MAAM,CAACC,SAAS;QAE3C,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,qBAAqBhB,KAAK,EAAE,EAAE;YACjGiB,MAAM,EAAE;cAAER,QAAQ;cAAEE;YAAU;UAChC,CAAC,CAAC;UAEFT,MAAM,CAACU,QAAQ,CAACM,IAAI,CAACjB,GAAG,CAAC;QAC3B,CAAC,CAAC,OAAOkB,GAAG,EAAE;UAAA,IAAAC,aAAA,EAAAC,kBAAA;UACZjB,QAAQ,CAAC,EAAAgB,aAAA,GAAAD,GAAG,CAACP,QAAQ,cAAAQ,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcF,IAAI,cAAAG,kBAAA,uBAAlBA,kBAAA,CAAoBC,OAAO,KAAI,oBAAoB,CAAC;QAC/D;MACF,CAAC,EACAnB,KAAK,IAAK;QACTC,QAAQ,CAAC,qDAAqD,CAAC;MACjE,CACF,CAAC;IACH,CAAC,MAAM;MACLA,QAAQ,CAAC,+CAA+C,CAAC;IAC3D;EACF,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,oBACEH,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBxB,KAAK,gBAAGN,OAAA;MAAG+B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEpB;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAAG9B,OAAA;MAAA0B,QAAA,GAAI,YAAU,EAACtB,GAAG;IAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxE,CAAC;AAEV,CAAC;AAAC5B,EAAA,CArCID,OAAO;EAAA,QACOJ,SAAS;AAAA;AAAAoC,EAAA,GADvBhC,OAAO;AAuCb,eAAeA,OAAO;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}