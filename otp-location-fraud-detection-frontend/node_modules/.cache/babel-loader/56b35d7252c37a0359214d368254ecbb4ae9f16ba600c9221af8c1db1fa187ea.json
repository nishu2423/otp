{"ast":null,"code":"var _jsxFileName = \"E:\\\\project1\\\\otp-location-fraud-detection-frontend\\\\otp-location-fraud-detection-frontend\\\\src\\\\components\\\\OTPForm.js\",\n  _s = $RefreshSig$();\n// /&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&7\n\n// import React, { useState } from 'react';\n// import { sendOTP } from '../services/api';\n// import './OTPForm.css';\n\n// const OTPForm = () => {\n//   const [cardNumber, setCardNumber] = useState('');\n//   const [cardHolderName, setCardHolderName] = useState('');\n//   const [cvv, setCvv] = useState('');\n//   const [expirationDate, setExpirationDate] = useState('');\n//   const [phoneNumber, setPhoneNumber] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const handleSendOTP = async () => {\n//     try {\n//       setMessage('Fetching location and sending OTP...');\n//       navigator.geolocation.getCurrentPosition(\n//         async (position) => {\n//           const data = {\n//             cardNumber,\n//             cardHolderName,\n//             cvv,\n//             expirationDate,\n//             registeredPhoneNumber: phoneNumber,\n//             registeredEmail: email,\n//             latitude: position.coords.latitude,\n//             longitude: position.coords.longitude,\n//           };\n//           const response = await sendOTP(data);\n//           setMessage(response.message);\n//         },\n//         (error) => {\n//           setMessage('Failed to get location. Please enable GPS and try again.');\n//         }\n//       );\n//     } catch (error) {\n//       setMessage(`Error sending OTP: ${error.response?.data?.message || error.message}`);\n//     }\n//   };\n\n//   return (\n//     <div className=\"otp-form-container\">\n//       <h2>Enter Card Details to Receive OTP</h2>\n//       <form className=\"otp-form\">\n//         <input type=\"text\" value={cardNumber} onChange={(e) => setCardNumber(e.target.value)} placeholder=\"Card Number\" />\n//         <input type=\"text\" value={cardHolderName} onChange={(e) => setCardHolderName(e.target.value)} placeholder=\"Cardholder Name\" />\n//         <input type=\"password\" value={cvv} onChange={(e) => setCvv(e.target.value)} placeholder=\"CVV\" />\n//         <input type=\"text\" value={expirationDate} onChange={(e) => setExpirationDate(e.target.value)} placeholder=\"Expiration Date (MM/YY)\" />\n//         <input type=\"text\" value={phoneNumber} onChange={(e) => setPhoneNumber(e.target.value)} placeholder=\"Registered Mobile Number\" />\n//         <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Registered Email Address\" />\n//         <button type=\"button\" onClick={handleSendOTP}>Send OTP</button>\n//       </form>\n//       <p>{message}</p>\n//     </div>\n//   );\n// };\n\n// export default OTPForm;\n\n//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&\n\n// import React, { useState } from 'react';\n// import { sendOTP } from '../services/api';\n// import './OTPForm.css';\n\n// const OTPForm = () => {\n//   const [cardNumber, setCardNumber] = useState('');\n//   const [cardHolderName, setCardHolderName] = useState('');\n//   const [cvv, setCvv] = useState('');\n//   const [expirationDate, setExpirationDate] = useState('');\n//   const [phoneNumber, setPhoneNumber] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const handleSendOTP = async () => {\n//     try {\n//       setMessage('Fetching location and sending OTP...');\n//       navigator.geolocation.getCurrentPosition(\n//         async (position) => {\n//           const data = {\n//             cardNumber,\n//             cardHolderName,\n//             cvv,\n//             expirationDate,\n//             registeredPhoneNumber: phoneNumber,\n//             registeredEmail: email,\n//             latitude: position.coords.latitude,\n//             longitude: position.coords.longitude,\n//           };\n//           const response = await sendOTP(data);\n//           setMessage(response.message);\n//         },\n//         (error) => {\n//           setMessage('Failed to get location. Please enable GPS and try again.');\n//         }\n//       );\n//     } catch (error) {\n//       setMessage(`Error sending OTP: ${error.response?.data?.message || error.message}`);\n//     }\n//   };\n\n//   return (\n//     <div className=\"otp-form-container\">\n//       <h2>Enter Card Details to Receive OTP</h2>\n//       <form className=\"otp-form\">\n//         <input type=\"text\" value={cardNumber} onChange={(e) => setCardNumber(e.target.value)} placeholder=\"Card Number\" />\n//         <input type=\"text\" value={cardHolderName} onChange={(e) => setCardHolderName(e.target.value)} placeholder=\"Cardholder Name\" />\n//         <input type=\"password\" value={cvv} onChange={(e) => setCvv(e.target.value)} placeholder=\"CVV\" />\n//         <input type=\"text\" value={expirationDate} onChange={(e) => setExpirationDate(e.target.value)} placeholder=\"Expiration Date (MM/YY)\" />\n//         <input type=\"text\" value={phoneNumber} onChange={(e) => setPhoneNumber(e.target.value)} placeholder=\"Registered Mobile Number\" />\n//         <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Registered Email Address\" />\n//         <button type=\"button\" onClick={handleSendOTP}>Send OTP</button>\n//       </form>\n//       <p>{message}</p>\n//     </div>\n//   );\n// };\n\n// export default OTPForm;\n\n//,.....................,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\nimport React, { useState, useContext } from 'react';\nimport { sendOTP } from '../services/api';\nimport { useNavigate } from 'react-router-dom';\nimport { ThemeContext } from '../context/ThemeContext';\nimport './OTPForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OTPForm = () => {\n  _s();\n  const {\n    theme,\n    toggleTheme\n  } = useContext(ThemeContext);\n  const navigate = useNavigate();\n  const [cardNumber, setCardNumber] = useState('');\n  const [cardHolderName, setCardHolderName] = useState('');\n  const [cvv, setCvv] = useState('');\n  const [expirationDate, setExpirationDate] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n\n  // Validate inputs before submitting\n  const validateInputs = () => {\n    if (!cardNumber || cardNumber.length !== 16) {\n      setMessage('Card number must be 16 digits.');\n      return false;\n    }\n    if (!cardHolderName) {\n      setMessage('Cardholder name is required.');\n      return false;\n    }\n    if (!cvv || cvv.length !== 3) {\n      setMessage('CVV must be 3 digits.');\n      return false;\n    }\n    if (!expirationDate || !/^(0[1-9]|1[0-2])\\/\\d{2}$/.test(expirationDate)) {\n      setMessage('Expiration date must be in MM/YY format.');\n      return false;\n    }\n    if (!phoneNumber || phoneNumber.length !== 10) {\n      setMessage('Phone number must be 10 digits.');\n      return false;\n    }\n    if (!email || !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n      setMessage('Invalid email address.');\n      return false;\n    }\n    return true;\n  };\n  const handleSendOTP = async () => {\n    // Validate inputs before proceeding\n    if (!validateInputs()) {\n      return;\n    }\n    try {\n      setMessage('Fetching location and sending OTP...');\n      navigator.geolocation.getCurrentPosition(async position => {\n        const data = {\n          cardNumber,\n          cardHolderName,\n          cvv,\n          expirationDate,\n          registeredPhoneNumber: phoneNumber,\n          registeredEmail: email,\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        };\n        const response = await sendOTP(data);\n        setMessage(response.message);\n      }, error => {\n        setMessage('Failed to get location. Please enable GPS and try again.');\n      });\n    } catch (error) {\n      if (error.response) {\n        // Backend returned an error (e.g., 404 for invalid card details or email)\n        if (error.response.status === 404) {\n          setMessage('Invalid details. Please check your card information and email.');\n        } else {\n          setMessage(`Error: ${error.response.data.message}`);\n        }\n      } else {\n        // Network or other errors\n        setMessage(`Error: ${error.message}`);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `otp-form-container ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleTheme,\n      className: \"btn btn-secondary\",\n      children: [\"Toggle \", theme === 'light' ? 'Dark' : 'Light', \" Mode\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enter Card Details to Receive OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"otp-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: cardNumber,\n        onChange: e => setCardNumber(e.target.value),\n        placeholder: \"Card Number\",\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: cardHolderName,\n        onChange: e => setCardHolderName(e.target.value),\n        placeholder: \"Cardholder Name\",\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: cvv,\n        onChange: e => setCvv(e.target.value),\n        placeholder: \"CVV\",\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: expirationDate,\n        onChange: e => setExpirationDate(e.target.value),\n        placeholder: \"Expiration Date (MM/YY)\",\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: phoneNumber,\n        onChange: e => setPhoneNumber(e.target.value),\n        placeholder: \"Registered Mobile Number\",\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Registered Email Address\",\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSendOTP,\n        className: \"btn btn-primary\",\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-${message.includes('success') ? 'success' : 'danger'} mt-3`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n_s(OTPForm, \"djfxiq1Vv+D89zMPR+PYkpyqpYw=\", false, function () {\n  return [useNavigate];\n});\n_c = OTPForm;\nexport default OTPForm;\nvar _c;\n$RefreshReg$(_c, \"OTPForm\");","map":{"version":3,"names":["React","useState","useContext","sendOTP","useNavigate","ThemeContext","jsxDEV","_jsxDEV","OTPForm","_s","theme","toggleTheme","navigate","cardNumber","setCardNumber","cardHolderName","setCardHolderName","cvv","setCvv","expirationDate","setExpirationDate","phoneNumber","setPhoneNumber","email","setEmail","message","setMessage","validateInputs","length","test","handleSendOTP","navigator","geolocation","getCurrentPosition","position","data","registeredPhoneNumber","registeredEmail","latitude","coords","longitude","response","error","status","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","includes","_c","$RefreshReg$"],"sources":["E:/project1/otp-location-fraud-detection-frontend/otp-location-fraud-detection-frontend/src/components/OTPForm.js"],"sourcesContent":["// /&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&7\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { sendOTP } from '../services/api';\r\n// import './OTPForm.css';\r\n\r\n// const OTPForm = () => {\r\n//   const [cardNumber, setCardNumber] = useState('');\r\n//   const [cardHolderName, setCardHolderName] = useState('');\r\n//   const [cvv, setCvv] = useState('');\r\n//   const [expirationDate, setExpirationDate] = useState('');\r\n//   const [phoneNumber, setPhoneNumber] = useState('');\r\n//   const [email, setEmail] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n\r\n//   const handleSendOTP = async () => {\r\n//     try {\r\n//       setMessage('Fetching location and sending OTP...');\r\n//       navigator.geolocation.getCurrentPosition(\r\n//         async (position) => {\r\n//           const data = {\r\n//             cardNumber,\r\n//             cardHolderName,\r\n//             cvv,\r\n//             expirationDate,\r\n//             registeredPhoneNumber: phoneNumber,\r\n//             registeredEmail: email,\r\n//             latitude: position.coords.latitude,\r\n//             longitude: position.coords.longitude,\r\n//           };\r\n//           const response = await sendOTP(data);\r\n//           setMessage(response.message);\r\n//         },\r\n//         (error) => {\r\n//           setMessage('Failed to get location. Please enable GPS and try again.');\r\n//         }\r\n//       );\r\n//     } catch (error) {\r\n//       setMessage(`Error sending OTP: ${error.response?.data?.message || error.message}`);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"otp-form-container\">\r\n//       <h2>Enter Card Details to Receive OTP</h2>\r\n//       <form className=\"otp-form\">\r\n//         <input type=\"text\" value={cardNumber} onChange={(e) => setCardNumber(e.target.value)} placeholder=\"Card Number\" />\r\n//         <input type=\"text\" value={cardHolderName} onChange={(e) => setCardHolderName(e.target.value)} placeholder=\"Cardholder Name\" />\r\n//         <input type=\"password\" value={cvv} onChange={(e) => setCvv(e.target.value)} placeholder=\"CVV\" />\r\n//         <input type=\"text\" value={expirationDate} onChange={(e) => setExpirationDate(e.target.value)} placeholder=\"Expiration Date (MM/YY)\" />\r\n//         <input type=\"text\" value={phoneNumber} onChange={(e) => setPhoneNumber(e.target.value)} placeholder=\"Registered Mobile Number\" />\r\n//         <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Registered Email Address\" />\r\n//         <button type=\"button\" onClick={handleSendOTP}>Send OTP</button>\r\n//       </form>\r\n//       <p>{message}</p>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default OTPForm;\r\n\r\n//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&\r\n\r\n// import React, { useState } from 'react';\r\n// import { sendOTP } from '../services/api';\r\n// import './OTPForm.css';\r\n\r\n// const OTPForm = () => {\r\n//   const [cardNumber, setCardNumber] = useState('');\r\n//   const [cardHolderName, setCardHolderName] = useState('');\r\n//   const [cvv, setCvv] = useState('');\r\n//   const [expirationDate, setExpirationDate] = useState('');\r\n//   const [phoneNumber, setPhoneNumber] = useState('');\r\n//   const [email, setEmail] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n\r\n//   const handleSendOTP = async () => {\r\n//     try {\r\n//       setMessage('Fetching location and sending OTP...');\r\n//       navigator.geolocation.getCurrentPosition(\r\n//         async (position) => {\r\n//           const data = {\r\n//             cardNumber,\r\n//             cardHolderName,\r\n//             cvv,\r\n//             expirationDate,\r\n//             registeredPhoneNumber: phoneNumber,\r\n//             registeredEmail: email,\r\n//             latitude: position.coords.latitude,\r\n//             longitude: position.coords.longitude,\r\n//           };\r\n//           const response = await sendOTP(data);\r\n//           setMessage(response.message);\r\n//         },\r\n//         (error) => {\r\n//           setMessage('Failed to get location. Please enable GPS and try again.');\r\n//         }\r\n//       );\r\n//     } catch (error) {\r\n//       setMessage(`Error sending OTP: ${error.response?.data?.message || error.message}`);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"otp-form-container\">\r\n//       <h2>Enter Card Details to Receive OTP</h2>\r\n//       <form className=\"otp-form\">\r\n//         <input type=\"text\" value={cardNumber} onChange={(e) => setCardNumber(e.target.value)} placeholder=\"Card Number\" />\r\n//         <input type=\"text\" value={cardHolderName} onChange={(e) => setCardHolderName(e.target.value)} placeholder=\"Cardholder Name\" />\r\n//         <input type=\"password\" value={cvv} onChange={(e) => setCvv(e.target.value)} placeholder=\"CVV\" />\r\n//         <input type=\"text\" value={expirationDate} onChange={(e) => setExpirationDate(e.target.value)} placeholder=\"Expiration Date (MM/YY)\" />\r\n//         <input type=\"text\" value={phoneNumber} onChange={(e) => setPhoneNumber(e.target.value)} placeholder=\"Registered Mobile Number\" />\r\n//         <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Registered Email Address\" />\r\n//         <button type=\"button\" onClick={handleSendOTP}>Send OTP</button>\r\n//       </form>\r\n//       <p>{message}</p>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default OTPForm;\r\n\r\n//,.....................,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\r\nimport React, { useState, useContext } from 'react';\r\nimport { sendOTP } from '../services/api';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ThemeContext } from '../context/ThemeContext';\r\nimport './OTPForm.css';\r\n\r\nconst OTPForm = () => {\r\n  const { theme, toggleTheme } = useContext(ThemeContext);\r\n  const navigate = useNavigate();\r\n  const [cardNumber, setCardNumber] = useState('');\r\n  const [cardHolderName, setCardHolderName] = useState('');\r\n  const [cvv, setCvv] = useState('');\r\n  const [expirationDate, setExpirationDate] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  // Validate inputs before submitting\r\n  const validateInputs = () => {\r\n    if (!cardNumber || cardNumber.length !== 16) {\r\n      setMessage('Card number must be 16 digits.');\r\n      return false;\r\n    }\r\n    if (!cardHolderName) {\r\n      setMessage('Cardholder name is required.');\r\n      return false;\r\n    }\r\n    if (!cvv || cvv.length !== 3) {\r\n      setMessage('CVV must be 3 digits.');\r\n      return false;\r\n    }\r\n    if (!expirationDate || !/^(0[1-9]|1[0-2])\\/\\d{2}$/.test(expirationDate)) {\r\n      setMessage('Expiration date must be in MM/YY format.');\r\n      return false;\r\n    }\r\n    if (!phoneNumber || phoneNumber.length !== 10) {\r\n      setMessage('Phone number must be 10 digits.');\r\n      return false;\r\n    }\r\n    if (!email || !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\r\n      setMessage('Invalid email address.');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSendOTP = async () => {\r\n    // Validate inputs before proceeding\r\n    if (!validateInputs()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setMessage('Fetching location and sending OTP...');\r\n      navigator.geolocation.getCurrentPosition(\r\n        async (position) => {\r\n          const data = {\r\n            cardNumber,\r\n            cardHolderName,\r\n            cvv,\r\n            expirationDate,\r\n            registeredPhoneNumber: phoneNumber,\r\n            registeredEmail: email,\r\n            latitude: position.coords.latitude,\r\n            longitude: position.coords.longitude,\r\n          };\r\n          const response = await sendOTP(data);\r\n          setMessage(response.message);\r\n        },\r\n        (error) => {\r\n          setMessage('Failed to get location. Please enable GPS and try again.');\r\n        }\r\n      );\r\n    } catch (error) {\r\n      if (error.response) {\r\n        // Backend returned an error (e.g., 404 for invalid card details or email)\r\n        if (error.response.status === 404) {\r\n          setMessage('Invalid details. Please check your card information and email.');\r\n        } else {\r\n          setMessage(`Error: ${error.response.data.message}`);\r\n        }\r\n      } else {\r\n        // Network or other errors\r\n        setMessage(`Error: ${error.message}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`otp-form-container ${theme}`}>\r\n      <button onClick={toggleTheme} className=\"btn btn-secondary\">\r\n        Toggle {theme === 'light' ? 'Dark' : 'Light'} Mode\r\n      </button>\r\n      <h2>Enter Card Details to Receive OTP</h2>\r\n      <form className=\"otp-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={cardNumber}\r\n          onChange={(e) => setCardNumber(e.target.value)}\r\n          placeholder=\"Card Number\"\r\n          className=\"form-control\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={cardHolderName}\r\n          onChange={(e) => setCardHolderName(e.target.value)}\r\n          placeholder=\"Cardholder Name\"\r\n          className=\"form-control\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          value={cvv}\r\n          onChange={(e) => setCvv(e.target.value)}\r\n          placeholder=\"CVV\"\r\n          className=\"form-control\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={expirationDate}\r\n          onChange={(e) => setExpirationDate(e.target.value)}\r\n          placeholder=\"Expiration Date (MM/YY)\"\r\n          className=\"form-control\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={phoneNumber}\r\n          onChange={(e) => setPhoneNumber(e.target.value)}\r\n          placeholder=\"Registered Mobile Number\"\r\n          className=\"form-control\"\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Registered Email Address\"\r\n          className=\"form-control\"\r\n        />\r\n        <button type=\"button\" onClick={handleSendOTP} className=\"btn btn-primary\">\r\n          Send OTP\r\n        </button>\r\n      </form>\r\n      {message && (\r\n        <div className={`alert alert-${message.includes('success') ? 'success' : 'danger'} mt-3`}>\r\n          {message}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OTPForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}