{"ast":null,"code":"\n// //,.....................,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n// import React, { useState, useContext } from 'react';\n// import { sendOTP } from '../services/api';\n// import { useNavigate } from 'react-router-dom';\n// import { ThemeContext } from '../context/ThemeContext';\n// import './OTPForm.css';\n\n// const OTPForm = () => {\n//   const { theme, toggleTheme } = useContext(ThemeContext);\n//   const navigate = useNavigate();\n//   const [cardNumber, setCardNumber] = useState('');\n//   const [cardHolderName, setCardHolderName] = useState('');\n//   const [cvv, setCvv] = useState('');\n//   const [expirationDate, setExpirationDate] = useState('');\n//   const [phoneNumber, setPhoneNumber] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   // Validate inputs before submitting\n//   const validateInputs = () => {\n//     if (!cardNumber || cardNumber.length !== 16) {\n//       setMessage('Card number must be 16 digits.');\n//       return false;\n//     }\n//     if (!cardHolderName) {\n//       setMessage('Cardholder name is required.');\n//       return false;\n//     }\n//     if (!cvv || cvv.length !== 3) {\n//       setMessage('CVV must be 3 digits.');\n//       return false;\n//     }\n//     if (!expirationDate || !/^(0[1-9]|1[0-2])\\/\\d{2}$/.test(expirationDate)) {\n//       setMessage('Expiration date must be in MM/YY format.');\n//       return false;\n//     }\n//     if (!phoneNumber || phoneNumber.length !== 10) {\n//       setMessage('Phone number must be 10 digits.');\n//       return false;\n//     }\n//     if (!email || !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n//       setMessage('Invalid email address.');\n//       return false;\n//     }\n//     return true;\n//   };\n\n//   const handleSendOTP = async () => {\n//     // Validate inputs before proceeding\n//     if (!validateInputs()) {\n//       return;\n//     }\n\n//     try {\n//       setMessage('Fetching location...');\n//       const position = await new Promise((resolve, reject) => {\n//         navigator.geolocation.getCurrentPosition(resolve, reject);\n//       });\n\n//       const data = {\n//         cardNumber,\n//         cardHolderName,\n//         cvv,\n//         expirationDate,\n//         registeredPhoneNumber: phoneNumber,\n//         registeredEmail: email,\n//         latitude: position.coords.latitude,\n//         longitude: position.coords.longitude,\n//       };\n\n//       setMessage('Sending OTP...');\n//       const response = await sendOTP(data);\n//       setMessage(response.message);\n//     } catch (error) {\n//       if (error.response) {\n//         // Backend returned an error (e.g., 404 for invalid card details or email)\n//         if (error.response.status === 404) {\n//           setMessage('Invalid details. Please check your card information and email.');\n//         } else {\n//           setMessage(`Error: ${error.response.data.message}`);\n//         }\n//       } else if (error.code === error.PERMISSION_DENIED || error.code === error.POSITION_UNAVAILABLE) {\n//         // Geolocation error\n//         setMessage('Failed to get location. Please enable GPS and try again.');\n//       } else {\n//         // Network or other errors\n//         setMessage(`Error: ${error.message}`);\n//       }\n//     }\n//   };\n\n//   return (\n//     <div className={`otp-form-container ${theme}`}>\n//       <button onClick={toggleTheme} className=\"btn btn-secondary\">\n//         Toggle {theme === 'light' ? 'Dark' : 'Light'} Mode\n//       </button>\n//       <h2>Enter Card Details to Receive OTP</h2>\n//       <form className=\"otp-form\">\n//         <input\n//           type=\"text\"\n//           value={cardNumber}\n//           onChange={(e) => setCardNumber(e.target.value)}\n//           placeholder=\"Card Number\"\n//           className=\"form-control\"\n//         />\n//         <input\n//           type=\"text\"\n//           value={cardHolderName}\n//           onChange={(e) => setCardHolderName(e.target.value)}\n//           placeholder=\"Cardholder Name\"\n//           className=\"form-control\"\n//         />\n//         <input\n//           type=\"password\"\n//           value={cvv}\n//           onChange={(e) => setCvv(e.target.value)}\n//           placeholder=\"CVV\"\n//           className=\"form-control\"\n//         />\n//         <input\n//           type=\"text\"\n//           value={expirationDate}\n//           onChange={(e) => setExpirationDate(e.target.value)}\n//           placeholder=\"Expiration Date (MM/YY)\"\n//           className=\"form-control\"\n//         />\n//         <input\n//           type=\"text\"\n//           value={phoneNumber}\n//           onChange={(e) => setPhoneNumber(e.target.value)}\n//           placeholder=\"Registered Mobile Number\"\n//           className=\"form-control\"\n//         />\n//         <input\n//           type=\"email\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           placeholder=\"Registered Email Address\"\n//           className=\"form-control\"\n//         />\n//         <button type=\"button\" onClick={handleSendOTP} className=\"btn btn-primary\">\n//           Send OTP\n//         </button>\n//       </form>\n//       {message && (\n//         <div className={`alert alert-${message.includes('success') ? 'success' : 'danger'} mt-3`}>\n//           {message}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default OTPForm;","map":{"version":3,"names":[],"sources":["E:/project1/otp-location-fraud-detection-frontend/otp-location-fraud-detection-frontend/src/components/OTPForm.js"],"sourcesContent":["\r\n// //,.....................,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\r\n// import React, { useState, useContext } from 'react';\r\n// import { sendOTP } from '../services/api';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { ThemeContext } from '../context/ThemeContext';\r\n// import './OTPForm.css';\r\n\r\n// const OTPForm = () => {\r\n//   const { theme, toggleTheme } = useContext(ThemeContext);\r\n//   const navigate = useNavigate();\r\n//   const [cardNumber, setCardNumber] = useState('');\r\n//   const [cardHolderName, setCardHolderName] = useState('');\r\n//   const [cvv, setCvv] = useState('');\r\n//   const [expirationDate, setExpirationDate] = useState('');\r\n//   const [phoneNumber, setPhoneNumber] = useState('');\r\n//   const [email, setEmail] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n\r\n//   // Validate inputs before submitting\r\n//   const validateInputs = () => {\r\n//     if (!cardNumber || cardNumber.length !== 16) {\r\n//       setMessage('Card number must be 16 digits.');\r\n//       return false;\r\n//     }\r\n//     if (!cardHolderName) {\r\n//       setMessage('Cardholder name is required.');\r\n//       return false;\r\n//     }\r\n//     if (!cvv || cvv.length !== 3) {\r\n//       setMessage('CVV must be 3 digits.');\r\n//       return false;\r\n//     }\r\n//     if (!expirationDate || !/^(0[1-9]|1[0-2])\\/\\d{2}$/.test(expirationDate)) {\r\n//       setMessage('Expiration date must be in MM/YY format.');\r\n//       return false;\r\n//     }\r\n//     if (!phoneNumber || phoneNumber.length !== 10) {\r\n//       setMessage('Phone number must be 10 digits.');\r\n//       return false;\r\n//     }\r\n//     if (!email || !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\r\n//       setMessage('Invalid email address.');\r\n//       return false;\r\n//     }\r\n//     return true;\r\n//   };\r\n\r\n//   const handleSendOTP = async () => {\r\n//     // Validate inputs before proceeding\r\n//     if (!validateInputs()) {\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       setMessage('Fetching location...');\r\n//       const position = await new Promise((resolve, reject) => {\r\n//         navigator.geolocation.getCurrentPosition(resolve, reject);\r\n//       });\r\n\r\n//       const data = {\r\n//         cardNumber,\r\n//         cardHolderName,\r\n//         cvv,\r\n//         expirationDate,\r\n//         registeredPhoneNumber: phoneNumber,\r\n//         registeredEmail: email,\r\n//         latitude: position.coords.latitude,\r\n//         longitude: position.coords.longitude,\r\n//       };\r\n\r\n//       setMessage('Sending OTP...');\r\n//       const response = await sendOTP(data);\r\n//       setMessage(response.message);\r\n//     } catch (error) {\r\n//       if (error.response) {\r\n//         // Backend returned an error (e.g., 404 for invalid card details or email)\r\n//         if (error.response.status === 404) {\r\n//           setMessage('Invalid details. Please check your card information and email.');\r\n//         } else {\r\n//           setMessage(`Error: ${error.response.data.message}`);\r\n//         }\r\n//       } else if (error.code === error.PERMISSION_DENIED || error.code === error.POSITION_UNAVAILABLE) {\r\n//         // Geolocation error\r\n//         setMessage('Failed to get location. Please enable GPS and try again.');\r\n//       } else {\r\n//         // Network or other errors\r\n//         setMessage(`Error: ${error.message}`);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className={`otp-form-container ${theme}`}>\r\n//       <button onClick={toggleTheme} className=\"btn btn-secondary\">\r\n//         Toggle {theme === 'light' ? 'Dark' : 'Light'} Mode\r\n//       </button>\r\n//       <h2>Enter Card Details to Receive OTP</h2>\r\n//       <form className=\"otp-form\">\r\n//         <input\r\n//           type=\"text\"\r\n//           value={cardNumber}\r\n//           onChange={(e) => setCardNumber(e.target.value)}\r\n//           placeholder=\"Card Number\"\r\n//           className=\"form-control\"\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           value={cardHolderName}\r\n//           onChange={(e) => setCardHolderName(e.target.value)}\r\n//           placeholder=\"Cardholder Name\"\r\n//           className=\"form-control\"\r\n//         />\r\n//         <input\r\n//           type=\"password\"\r\n//           value={cvv}\r\n//           onChange={(e) => setCvv(e.target.value)}\r\n//           placeholder=\"CVV\"\r\n//           className=\"form-control\"\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           value={expirationDate}\r\n//           onChange={(e) => setExpirationDate(e.target.value)}\r\n//           placeholder=\"Expiration Date (MM/YY)\"\r\n//           className=\"form-control\"\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           value={phoneNumber}\r\n//           onChange={(e) => setPhoneNumber(e.target.value)}\r\n//           placeholder=\"Registered Mobile Number\"\r\n//           className=\"form-control\"\r\n//         />\r\n//         <input\r\n//           type=\"email\"\r\n//           value={email}\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//           placeholder=\"Registered Email Address\"\r\n//           className=\"form-control\"\r\n//         />\r\n//         <button type=\"button\" onClick={handleSendOTP} className=\"btn btn-primary\">\r\n//           Send OTP\r\n//         </button>\r\n//       </form>\r\n//       {message && (\r\n//         <div className={`alert alert-${message.includes('success') ? 'success' : 'danger'} mt-3`}>\r\n//           {message}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default OTPForm;"],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}