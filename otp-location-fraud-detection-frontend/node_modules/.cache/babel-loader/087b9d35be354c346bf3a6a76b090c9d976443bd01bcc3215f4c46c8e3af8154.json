{"ast":null,"code":"var _jsxFileName = \"E:\\\\project1\\\\otp-location-fraud-detection-frontend\\\\otp-location-fraud-detection-frontend\\\\src\\\\components\\\\OTPVerification.js\",\n  _s = $RefreshSig$();\n///^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^6\n\n// import React, { useState } from 'react';\n// import { verifyTransaction } from '../services/api';\n// import './OTPVerification.css';\n\n// const OTPVerification = () => {\n//   const [cardNumber, setCardNumber] = useState('');\n//   const [otp, setOtp] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const handleVerifyTransaction = async () => {\n//     try {\n//       setMessage('Fetching location and verifying transaction...');\n//       navigator.geolocation.getCurrentPosition(\n//         async (position) => {\n//           const data = {\n//             cardNumber,\n//             otp,\n//             latitude: position.coords.latitude,\n//             longitude: position.coords.longitude,\n//           };\n//           const response = await verifyTransaction(data);\n//           setMessage(response.message);\n//         },\n//         (error) => {\n//           setMessage('Failed to get location. Please enable GPS and try again.');\n//         }\n//       );\n//     } catch (error) {\n//       setMessage(`Error verifying transaction: ${error.response?.data?.message || error.message}`);\n//     }\n//   };\n\n//   return (\n//     <div className=\"otp-verification-container\">\n//       <h2>Verify Your Transaction</h2>\n//       <div className=\"otp-layout\">\n//         <div className=\"card-image\">\n//           <img src=\"https://www.pngplay.com/wp-content/uploads/7/Debit-Card-Transparent-Image.png\" alt=\"Virtual Debit Card\" />\n//         </div>\n//         <div className=\"otp-form\">\n//           <input type=\"text\" value={cardNumber} onChange={(e) => setCardNumber(e.target.value)} placeholder=\"Card Number\" />\n//           <input type=\"text\" value={otp} onChange={(e) => setOtp(e.target.value)} placeholder=\"Enter OTP\" />\n//           <button type=\"button\" onClick={handleVerifyTransaction}>Verify Transaction</button>\n//           <p>{message}</p>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default OTPVerification;\n\n//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&7\nimport React, { useState, useEffect } from 'react';\nimport { verifyTransaction } from '../services/api';\nimport { useLocation } from 'react-router-dom';\nimport './OTPVerification.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OTPVerification = () => {\n  _s();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const otpFromLink = queryParams.get('otp');\n  const cardNumberFromLink = queryParams.get('cardNumber');\n  const [cardNumber, setCardNumber] = useState(cardNumberFromLink || '');\n  const [otp, setOtp] = useState(otpFromLink || '');\n  const [message, setMessage] = useState('');\n  const [locationFetched, setLocationFetched] = useState(false);\n  const [latitude, setLatitude] = useState(null);\n  const [longitude, setLongitude] = useState(null);\n  useEffect(() => {\n    if (otpFromLink && cardNumberFromLink) {\n      fetchLocation();\n    }\n  }, [otpFromLink, cardNumberFromLink]);\n  const fetchLocation = () => {\n    navigator.geolocation.getCurrentPosition(position => {\n      setLatitude(position.coords.latitude);\n      setLongitude(position.coords.longitude);\n      setLocationFetched(true);\n    }, error => {\n      setMessage('Failed to get location. Please enable GPS and try again.');\n    });\n  };\n  const handleVerifyTransaction = async () => {\n    try {\n      setMessage('Verifying transaction...');\n      const data = {\n        cardNumber,\n        otp,\n        latitude,\n        longitude\n      };\n      const response = await verifyTransaction(data);\n      setMessage(response.message);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage(`Error verifying transaction: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"otp-verification-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Verify Your Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"otp-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://www.pngplay.com/wp-content/uploads/7/Debit-Card-Transparent-Image.png\",\n          alt: \"Virtual Debit Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"otp-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: cardNumber,\n          onChange: e => setCardNumber(e.target.value),\n          placeholder: \"Card Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), locationFetched ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: otp,\n            onChange: e => setOtp(e.target.value),\n            placeholder: \"Enter OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleVerifyTransaction,\n            children: \"Verify Transaction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Fetching location...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(OTPVerification, \"wEzeOZJ6xAVipp5gbTEoG8eysEA=\", false, function () {\n  return [useLocation];\n});\n_c = OTPVerification;\nexport default OTPVerification;\nvar _c;\n$RefreshReg$(_c, \"OTPVerification\");","map":{"version":3,"names":["React","useState","useEffect","verifyTransaction","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","OTPVerification","_s","location","queryParams","URLSearchParams","search","otpFromLink","get","cardNumberFromLink","cardNumber","setCardNumber","otp","setOtp","message","setMessage","locationFetched","setLocationFetched","latitude","setLatitude","longitude","setLongitude","fetchLocation","navigator","geolocation","getCurrentPosition","position","coords","error","handleVerifyTransaction","data","response","_error$response","_error$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["E:/project1/otp-location-fraud-detection-frontend/otp-location-fraud-detection-frontend/src/components/OTPVerification.js"],"sourcesContent":["\r\n///^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^6\r\n\r\n// import React, { useState } from 'react';\r\n// import { verifyTransaction } from '../services/api';\r\n// import './OTPVerification.css';\r\n\r\n// const OTPVerification = () => {\r\n//   const [cardNumber, setCardNumber] = useState('');\r\n//   const [otp, setOtp] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n\r\n//   const handleVerifyTransaction = async () => {\r\n//     try {\r\n//       setMessage('Fetching location and verifying transaction...');\r\n//       navigator.geolocation.getCurrentPosition(\r\n//         async (position) => {\r\n//           const data = {\r\n//             cardNumber,\r\n//             otp,\r\n//             latitude: position.coords.latitude,\r\n//             longitude: position.coords.longitude,\r\n//           };\r\n//           const response = await verifyTransaction(data);\r\n//           setMessage(response.message);\r\n//         },\r\n//         (error) => {\r\n//           setMessage('Failed to get location. Please enable GPS and try again.');\r\n//         }\r\n//       );\r\n//     } catch (error) {\r\n//       setMessage(`Error verifying transaction: ${error.response?.data?.message || error.message}`);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"otp-verification-container\">\r\n//       <h2>Verify Your Transaction</h2>\r\n//       <div className=\"otp-layout\">\r\n//         <div className=\"card-image\">\r\n//           <img src=\"https://www.pngplay.com/wp-content/uploads/7/Debit-Card-Transparent-Image.png\" alt=\"Virtual Debit Card\" />\r\n//         </div>\r\n//         <div className=\"otp-form\">\r\n//           <input type=\"text\" value={cardNumber} onChange={(e) => setCardNumber(e.target.value)} placeholder=\"Card Number\" />\r\n//           <input type=\"text\" value={otp} onChange={(e) => setOtp(e.target.value)} placeholder=\"Enter OTP\" />\r\n//           <button type=\"button\" onClick={handleVerifyTransaction}>Verify Transaction</button>\r\n//           <p>{message}</p>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default OTPVerification;\r\n\r\n//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&7\r\nimport React, { useState, useEffect } from 'react';\r\nimport { verifyTransaction } from '../services/api';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './OTPVerification.css';\r\n\r\nconst OTPVerification = () => {\r\n  const location = useLocation();\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const otpFromLink = queryParams.get('otp');\r\n  const cardNumberFromLink = queryParams.get('cardNumber');\r\n\r\n  const [cardNumber, setCardNumber] = useState(cardNumberFromLink || '');\r\n  const [otp, setOtp] = useState(otpFromLink || '');\r\n  const [message, setMessage] = useState('');\r\n  const [locationFetched, setLocationFetched] = useState(false);\r\n  const [latitude, setLatitude] = useState(null);\r\n  const [longitude, setLongitude] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (otpFromLink && cardNumberFromLink) {\r\n      fetchLocation();\r\n    }\r\n  }, [otpFromLink, cardNumberFromLink]);\r\n\r\n  const fetchLocation = () => {\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        setLatitude(position.coords.latitude);\r\n        setLongitude(position.coords.longitude);\r\n        setLocationFetched(true);\r\n      },\r\n      (error) => {\r\n        setMessage('Failed to get location. Please enable GPS and try again.');\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleVerifyTransaction = async () => {\r\n    try {\r\n      setMessage('Verifying transaction...');\r\n      const data = {\r\n        cardNumber,\r\n        otp,\r\n        latitude,\r\n        longitude,\r\n      };\r\n      const response = await verifyTransaction(data);\r\n      setMessage(response.message);\r\n    } catch (error) {\r\n      setMessage(`Error verifying transaction: ${error.response?.data?.message || error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"otp-verification-container\">\r\n      <h2>Verify Your Transaction</h2>\r\n      <div className=\"otp-layout\">\r\n        <div className=\"card-image\">\r\n          <img src=\"https://www.pngplay.com/wp-content/uploads/7/Debit-Card-Transparent-Image.png\" alt=\"Virtual Debit Card\" />\r\n        </div>\r\n        <div className=\"otp-form\">\r\n          <input type=\"text\" value={cardNumber} onChange={(e) => setCardNumber(e.target.value)} placeholder=\"Card Number\" />\r\n          {locationFetched ? (\r\n            <>\r\n              <input type=\"text\" value={otp} onChange={(e) => setOtp(e.target.value)} placeholder=\"Enter OTP\" />\r\n              <button type=\"button\" onClick={handleVerifyTransaction}>Verify Transaction</button>\r\n            </>\r\n          ) : (\r\n            <p>Fetching location...</p>\r\n          )}\r\n          <p>{message}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OTPVerification;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}