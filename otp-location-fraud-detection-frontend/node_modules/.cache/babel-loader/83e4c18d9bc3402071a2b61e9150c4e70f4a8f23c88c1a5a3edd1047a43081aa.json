{"ast":null,"code":"var _jsxFileName = \"E:\\\\project1\\\\otp-location-fraud-detection-frontend\\\\otp-location-fraud-detection-frontend\\\\src\\\\components\\\\OTPForm.js\",\n  _s = $RefreshSig$();\n// //,.....................,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n// import React, { useState, useContext } from 'react';\n// import { sendOTP } from '../services/api';\n// import { useNavigate } from 'react-router-dom';\n// import { ThemeContext } from '../context/ThemeContext';\n// import './OTPForm.css';\n\n// const OTPForm = () => {\n//   const { theme, toggleTheme } = useContext(ThemeContext);\n//   const navigate = useNavigate();\n//   const [cardNumber, setCardNumber] = useState('');\n//   const [cardHolderName, setCardHolderName] = useState('');\n//   const [cvv, setCvv] = useState('');\n//   const [expirationDate, setExpirationDate] = useState('');\n//   const [phoneNumber, setPhoneNumber] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   // Validate inputs before submitting\n//   const validateInputs = () => {\n//     if (!cardNumber || cardNumber.length !== 16) {\n//       setMessage('Card number must be 16 digits.');\n//       return false;\n//     }\n//     if (!cardHolderName) {\n//       setMessage('Cardholder name is required.');\n//       return false;\n//     }\n//     if (!cvv || cvv.length !== 3) {\n//       setMessage('CVV must be 3 digits.');\n//       return false;\n//     }\n//     if (!expirationDate || !/^(0[1-9]|1[0-2])\\/\\d{2}$/.test(expirationDate)) {\n//       setMessage('Expiration date must be in MM/YY format.');\n//       return false;\n//     }\n//     if (!phoneNumber || phoneNumber.length !== 10) {\n//       setMessage('Phone number must be 10 digits.');\n//       return false;\n//     }\n//     if (!email || !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n//       setMessage('Invalid email address.');\n//       return false;\n//     }\n//     return true;\n//   };\n\n//   const handleSendOTP = async () => {\n//     // Validate inputs before proceeding\n//     if (!validateInputs()) {\n//       return;\n//     }\n\n//     try {\n//       setMessage('Fetching location...');\n//       const position = await new Promise((resolve, reject) => {\n//         navigator.geolocation.getCurrentPosition(resolve, reject);\n//       });\n\n//       const data = {\n//         cardNumber,\n//         cardHolderName,\n//         cvv,\n//         expirationDate,\n//         registeredPhoneNumber: phoneNumber,\n//         registeredEmail: email,\n//         latitude: position.coords.latitude,\n//         longitude: position.coords.longitude,\n//       };\n\n//       setMessage('Sending OTP...');\n//       const response = await sendOTP(data);\n//       setMessage(response.message);\n//     } catch (error) {\n//       if (error.response) {\n//         // Backend returned an error (e.g., 404 for invalid card details or email)\n//         if (error.response.status === 404) {\n//           setMessage('Invalid details. Please check your card information and email.');\n//         } else {\n//           setMessage(`Error: ${error.response.data.message}`);\n//         }\n//       } else if (error.code === error.PERMISSION_DENIED || error.code === error.POSITION_UNAVAILABLE) {\n//         // Geolocation error\n//         setMessage('Failed to get location. Please enable GPS and try again.');\n//       } else {\n//         // Network or other errors\n//         setMessage(`Error: ${error.message}`);\n//       }\n//     }\n//   };\n\n//   return (\n//     <div className={`otp-form-container ${theme}`}>\n//       <button onClick={toggleTheme} className=\"btn btn-secondary\">\n//         Toggle {theme === 'light' ? 'Dark' : 'Light'} Mode\n//       </button>\n//       <h2>Enter Card Details to Receive OTP</h2>\n//       <form className=\"otp-form\">\n//         <input\n//           type=\"text\"\n//           value={cardNumber}\n//           onChange={(e) => setCardNumber(e.target.value)}\n//           placeholder=\"Card Number\"\n//           className=\"form-control\"\n//         />\n//         <input\n//           type=\"text\"\n//           value={cardHolderName}\n//           onChange={(e) => setCardHolderName(e.target.value)}\n//           placeholder=\"Cardholder Name\"\n//           className=\"form-control\"\n//         />\n//         <input\n//           type=\"password\"\n//           value={cvv}\n//           onChange={(e) => setCvv(e.target.value)}\n//           placeholder=\"CVV\"\n//           className=\"form-control\"\n//         />\n//         <input\n//           type=\"text\"\n//           value={expirationDate}\n//           onChange={(e) => setExpirationDate(e.target.value)}\n//           placeholder=\"Expiration Date (MM/YY)\"\n//           className=\"form-control\"\n//         />\n//         <input\n//           type=\"text\"\n//           value={phoneNumber}\n//           onChange={(e) => setPhoneNumber(e.target.value)}\n//           placeholder=\"Registered Mobile Number\"\n//           className=\"form-control\"\n//         />\n//         <input\n//           type=\"email\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           placeholder=\"Registered Email Address\"\n//           className=\"form-control\"\n//         />\n//         <button type=\"button\" onClick={handleSendOTP} className=\"btn btn-primary\">\n//           Send OTP\n//         </button>\n//       </form>\n//       {message && (\n//         <div className={`alert alert-${message.includes('success') ? 'success' : 'danger'} mt-3`}>\n//           {message}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default OTPForm;\n\nimport React, { useState, useContext } from 'react';\nimport { sendOTP } from '../services/api';\nimport { useNavigate } from 'react-router-dom';\nimport { ThemeContext } from '../context/ThemeContext';\nimport './OTPForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OTPForm = () => {\n  _s();\n  const {\n    theme,\n    toggleTheme\n  } = useContext(ThemeContext);\n  const navigate = useNavigate();\n  const [cardNumber, setCardNumber] = useState('');\n  const [cardHolderName, setCardHolderName] = useState('');\n  const [cvv, setCvv] = useState('');\n  const [expirationDate, setExpirationDate] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n\n  // Validate inputs before submitting\n  const validateInputs = () => {\n    if (!cardNumber || cardNumber.length !== 16) {\n      setMessage('Card number must be 16 digits.');\n      return false;\n    }\n    if (!cardHolderName) {\n      setMessage('Cardholder name is required.');\n      return false;\n    }\n    if (!cvv || cvv.length !== 3) {\n      setMessage('CVV must be 3 digits.');\n      return false;\n    }\n    if (!expirationDate || !/^(0[1-9]|1[0-2])\\/\\d{2}$/.test(expirationDate)) {\n      setMessage('Expiration date must be in MM/YY format.');\n      return false;\n    }\n    if (!phoneNumber || phoneNumber.length !== 10) {\n      setMessage('Phone number must be 10 digits.');\n      return false;\n    }\n    if (!email || !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n      setMessage('Invalid email address.');\n      return false;\n    }\n    return true;\n  };\n  const handleSendOTP = async () => {\n    // Validate inputs before proceeding\n    if (!validateInputs()) {\n      return;\n    }\n    try {\n      setMessage('Fetching location...');\n      const position = await new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject);\n      });\n      const data = {\n        cardNumber,\n        cardHolderName,\n        cvv,\n        expirationDate,\n        registeredPhoneNumber: phoneNumber,\n        registeredEmail: email,\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude\n      };\n      setMessage('Sending OTP...');\n      const response = await sendOTP(data);\n      setMessage(response.message);\n    } catch (error) {\n      if (error.response) {\n        // Backend returned an error (e.g., 404 for invalid card details or email)\n        if (error.response.status === 404) {\n          setMessage('Invalid details. Please check your card information and email.');\n        } else {\n          setMessage(`Error: ${error.response.data.message}`);\n        }\n      } else if (error.code === error.PERMISSION_DENIED || error.code === error.POSITION_UNAVAILABLE) {\n        // Geolocation error\n        setMessage('Failed to get location. Please enable GPS and try again.');\n      } else {\n        // Network or other errors\n        setMessage(`Error: ${error.message}`);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `otp-form-container ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleTheme,\n      className: \"btn btn-secondary\",\n      children: [\"Toggle \", theme === 'light' ? 'Dark' : 'Light', \" Mode\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enter Card Details to Receive OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"otp-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: cardNumber,\n        onChange: e => setCardNumber(e.target.value),\n        placeholder: \"Card Number\",\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: cardHolderName,\n        onChange: e => setCardHolderName(e.target.value),\n        placeholder: \"Cardholder Name\",\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: cvv,\n        onChange: e => setCvv(e.target.value),\n        placeholder: \"CVV\",\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: expirationDate,\n        onChange: e => setExpirationDate(e.target.value),\n        placeholder: \"Expiration Date (MM/YY)\",\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: phoneNumber,\n        onChange: e => setPhoneNumber(e.target.value),\n        placeholder: \"Registered Mobile Number\",\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Registered Email Address\",\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSendOTP,\n        className: \"btn btn-primary\",\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-${message.includes('success') ? 'success' : 'danger'} mt-3`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n};\n_s(OTPForm, \"djfxiq1Vv+D89zMPR+PYkpyqpYw=\", false, function () {\n  return [useNavigate];\n});\n_c = OTPForm;\nexport default OTPForm;\nvar _c;\n$RefreshReg$(_c, \"OTPForm\");","map":{"version":3,"names":["React","useState","useContext","sendOTP","useNavigate","ThemeContext","jsxDEV","_jsxDEV","OTPForm","_s","theme","toggleTheme","navigate","cardNumber","setCardNumber","cardHolderName","setCardHolderName","cvv","setCvv","expirationDate","setExpirationDate","phoneNumber","setPhoneNumber","email","setEmail","message","setMessage","validateInputs","length","test","handleSendOTP","position","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","data","registeredPhoneNumber","registeredEmail","latitude","coords","longitude","response","error","status","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","includes","_c","$RefreshReg$"],"sources":["E:/project1/otp-location-fraud-detection-frontend/otp-location-fraud-detection-frontend/src/components/OTPForm.js"],"sourcesContent":["\r\n// //,.....................,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\r\n// import React, { useState, useContext } from 'react';\r\n// import { sendOTP } from '../services/api';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { ThemeContext } from '../context/ThemeContext';\r\n// import './OTPForm.css';\r\n\r\n// const OTPForm = () => {\r\n//   const { theme, toggleTheme } = useContext(ThemeContext);\r\n//   const navigate = useNavigate();\r\n//   const [cardNumber, setCardNumber] = useState('');\r\n//   const [cardHolderName, setCardHolderName] = useState('');\r\n//   const [cvv, setCvv] = useState('');\r\n//   const [expirationDate, setExpirationDate] = useState('');\r\n//   const [phoneNumber, setPhoneNumber] = useState('');\r\n//   const [email, setEmail] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n\r\n//   // Validate inputs before submitting\r\n//   const validateInputs = () => {\r\n//     if (!cardNumber || cardNumber.length !== 16) {\r\n//       setMessage('Card number must be 16 digits.');\r\n//       return false;\r\n//     }\r\n//     if (!cardHolderName) {\r\n//       setMessage('Cardholder name is required.');\r\n//       return false;\r\n//     }\r\n//     if (!cvv || cvv.length !== 3) {\r\n//       setMessage('CVV must be 3 digits.');\r\n//       return false;\r\n//     }\r\n//     if (!expirationDate || !/^(0[1-9]|1[0-2])\\/\\d{2}$/.test(expirationDate)) {\r\n//       setMessage('Expiration date must be in MM/YY format.');\r\n//       return false;\r\n//     }\r\n//     if (!phoneNumber || phoneNumber.length !== 10) {\r\n//       setMessage('Phone number must be 10 digits.');\r\n//       return false;\r\n//     }\r\n//     if (!email || !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\r\n//       setMessage('Invalid email address.');\r\n//       return false;\r\n//     }\r\n//     return true;\r\n//   };\r\n\r\n//   const handleSendOTP = async () => {\r\n//     // Validate inputs before proceeding\r\n//     if (!validateInputs()) {\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       setMessage('Fetching location...');\r\n//       const position = await new Promise((resolve, reject) => {\r\n//         navigator.geolocation.getCurrentPosition(resolve, reject);\r\n//       });\r\n\r\n//       const data = {\r\n//         cardNumber,\r\n//         cardHolderName,\r\n//         cvv,\r\n//         expirationDate,\r\n//         registeredPhoneNumber: phoneNumber,\r\n//         registeredEmail: email,\r\n//         latitude: position.coords.latitude,\r\n//         longitude: position.coords.longitude,\r\n//       };\r\n\r\n//       setMessage('Sending OTP...');\r\n//       const response = await sendOTP(data);\r\n//       setMessage(response.message);\r\n//     } catch (error) {\r\n//       if (error.response) {\r\n//         // Backend returned an error (e.g., 404 for invalid card details or email)\r\n//         if (error.response.status === 404) {\r\n//           setMessage('Invalid details. Please check your card information and email.');\r\n//         } else {\r\n//           setMessage(`Error: ${error.response.data.message}`);\r\n//         }\r\n//       } else if (error.code === error.PERMISSION_DENIED || error.code === error.POSITION_UNAVAILABLE) {\r\n//         // Geolocation error\r\n//         setMessage('Failed to get location. Please enable GPS and try again.');\r\n//       } else {\r\n//         // Network or other errors\r\n//         setMessage(`Error: ${error.message}`);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className={`otp-form-container ${theme}`}>\r\n//       <button onClick={toggleTheme} className=\"btn btn-secondary\">\r\n//         Toggle {theme === 'light' ? 'Dark' : 'Light'} Mode\r\n//       </button>\r\n//       <h2>Enter Card Details to Receive OTP</h2>\r\n//       <form className=\"otp-form\">\r\n//         <input\r\n//           type=\"text\"\r\n//           value={cardNumber}\r\n//           onChange={(e) => setCardNumber(e.target.value)}\r\n//           placeholder=\"Card Number\"\r\n//           className=\"form-control\"\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           value={cardHolderName}\r\n//           onChange={(e) => setCardHolderName(e.target.value)}\r\n//           placeholder=\"Cardholder Name\"\r\n//           className=\"form-control\"\r\n//         />\r\n//         <input\r\n//           type=\"password\"\r\n//           value={cvv}\r\n//           onChange={(e) => setCvv(e.target.value)}\r\n//           placeholder=\"CVV\"\r\n//           className=\"form-control\"\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           value={expirationDate}\r\n//           onChange={(e) => setExpirationDate(e.target.value)}\r\n//           placeholder=\"Expiration Date (MM/YY)\"\r\n//           className=\"form-control\"\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           value={phoneNumber}\r\n//           onChange={(e) => setPhoneNumber(e.target.value)}\r\n//           placeholder=\"Registered Mobile Number\"\r\n//           className=\"form-control\"\r\n//         />\r\n//         <input\r\n//           type=\"email\"\r\n//           value={email}\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//           placeholder=\"Registered Email Address\"\r\n//           className=\"form-control\"\r\n//         />\r\n//         <button type=\"button\" onClick={handleSendOTP} className=\"btn btn-primary\">\r\n//           Send OTP\r\n//         </button>\r\n//       </form>\r\n//       {message && (\r\n//         <div className={`alert alert-${message.includes('success') ? 'success' : 'danger'} mt-3`}>\r\n//           {message}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default OTPForm;\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useContext } from 'react';\r\nimport { sendOTP } from '../services/api';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ThemeContext } from '../context/ThemeContext';\r\nimport './OTPForm.css';\r\n\r\nconst OTPForm = () => {\r\n  const { theme, toggleTheme } = useContext(ThemeContext);\r\n  const navigate = useNavigate();\r\n  const [cardNumber, setCardNumber] = useState('');\r\n  const [cardHolderName, setCardHolderName] = useState('');\r\n  const [cvv, setCvv] = useState('');\r\n  const [expirationDate, setExpirationDate] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  // Validate inputs before submitting\r\n  const validateInputs = () => {\r\n    if (!cardNumber || cardNumber.length !== 16) {\r\n      setMessage('Card number must be 16 digits.');\r\n      return false;\r\n    }\r\n    if (!cardHolderName) {\r\n      setMessage('Cardholder name is required.');\r\n      return false;\r\n    }\r\n    if (!cvv || cvv.length !== 3) {\r\n      setMessage('CVV must be 3 digits.');\r\n      return false;\r\n    }\r\n    if (!expirationDate || !/^(0[1-9]|1[0-2])\\/\\d{2}$/.test(expirationDate)) {\r\n      setMessage('Expiration date must be in MM/YY format.');\r\n      return false;\r\n    }\r\n    if (!phoneNumber || phoneNumber.length !== 10) {\r\n      setMessage('Phone number must be 10 digits.');\r\n      return false;\r\n    }\r\n    if (!email || !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\r\n      setMessage('Invalid email address.');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSendOTP = async () => {\r\n    // Validate inputs before proceeding\r\n    if (!validateInputs()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setMessage('Fetching location...');\r\n      const position = await new Promise((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition(resolve, reject);\r\n      });\r\n\r\n      const data = {\r\n        cardNumber,\r\n        cardHolderName,\r\n        cvv,\r\n        expirationDate,\r\n        registeredPhoneNumber: phoneNumber,\r\n        registeredEmail: email,\r\n        latitude: position.coords.latitude,\r\n        longitude: position.coords.longitude,\r\n      };\r\n\r\n      setMessage('Sending OTP...');\r\n      const response = await sendOTP(data);\r\n      setMessage(response.message);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        // Backend returned an error (e.g., 404 for invalid card details or email)\r\n        if (error.response.status === 404) {\r\n          setMessage('Invalid details. Please check your card information and email.');\r\n        } else {\r\n          setMessage(`Error: ${error.response.data.message}`);\r\n        }\r\n      } else if (error.code === error.PERMISSION_DENIED || error.code === error.POSITION_UNAVAILABLE) {\r\n        // Geolocation error\r\n        setMessage('Failed to get location. Please enable GPS and try again.');\r\n      } else {\r\n        // Network or other errors\r\n        setMessage(`Error: ${error.message}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`otp-form-container ${theme}`}>\r\n      <button onClick={toggleTheme} className=\"btn btn-secondary\">\r\n        Toggle {theme === 'light' ? 'Dark' : 'Light'} Mode\r\n      </button>\r\n      <h2>Enter Card Details to Receive OTP</h2>\r\n      <form className=\"otp-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={cardNumber}\r\n          onChange={(e) => setCardNumber(e.target.value)}\r\n          placeholder=\"Card Number\"\r\n          className=\"form-control\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={cardHolderName}\r\n          onChange={(e) => setCardHolderName(e.target.value)}\r\n          placeholder=\"Cardholder Name\"\r\n          className=\"form-control\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          value={cvv}\r\n          onChange={(e) => setCvv(e.target.value)}\r\n          placeholder=\"CVV\"\r\n          className=\"form-control\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={expirationDate}\r\n          onChange={(e) => setExpirationDate(e.target.value)}\r\n          placeholder=\"Expiration Date (MM/YY)\"\r\n          className=\"form-control\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={phoneNumber}\r\n          onChange={(e) => setPhoneNumber(e.target.value)}\r\n          placeholder=\"Registered Mobile Number\"\r\n          className=\"form-control\"\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Registered Email Address\"\r\n          className=\"form-control\"\r\n        />\r\n        <button type=\"button\" onClick={handleSendOTP} className=\"btn btn-primary\">\r\n          Send OTP\r\n        </button>\r\n      </form>\r\n      {message && (\r\n        <div className={`alert alert-${message.includes('success') ? 'success' : 'danger'} mt-3`}>\r\n          {message}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OTPForm;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}