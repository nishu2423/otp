{"ast":null,"code":"var _jsxFileName = \"E:\\\\project1\\\\otp-location-fraud-detection-frontend\\\\otp-location-fraud-detection-frontend\\\\src\\\\components\\\\OTPPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import './OTPPage.css';\n\n// const OTPPage = () => {\n//   const { otp } = useParams();\n//   const [message, setMessage] = useState('');\n\n//   useEffect(() => {\n//     navigator.geolocation.getCurrentPosition(\n//       (position) => {\n//         setMessage(`OTP: ${otp} at location (${position.coords.latitude}, ${position.coords.longitude})`);\n//       },\n//       (error) => {\n//         setMessage('Failed to get location. Please enable GPS and try again.');\n//       }\n//     );\n//   }, [otp]);\n\n//   return (\n//     <div className=\"otp-page-container\">\n//       <h2>Your OTP</h2>\n//       <p>{message}</p>\n//     </div>\n//   );\n// };\n\n// export default OTPPage;\n\n//..................................................................................\n\n// import React, { useState, useEffect, useContext } from 'react';\n// import { useParams } from 'react-router-dom';\n// import { ThemeContext } from '../context/ThemeContext';\n// import './OTPPage.css';\n\n// const OTPPage = () => {\n//   const { theme } = useContext(ThemeContext);\n//   const { otp } = useParams();\n//   const [message, setMessage] = useState('');\n\n//   useEffect(() => {\n//     navigator.geolocation.getCurrentPosition(\n//       (position) => {\n//         setMessage(`OTP: ${otp} at location (${position.coords.latitude}, ${position.coords.longitude})`);\n//       },\n//       (error) => {\n//         setMessage('Failed to get location. Please enable GPS and try again.');\n//       }\n//     );\n//   }, [otp]);\n\n//   return (\n//     <div className={`otp-page-container ${theme}`}>\n//       <h2>Your OTP</h2>\n//       <p>{message}</p>\n//     </div>\n//   );\n// };\n\n// export default OTPPage;\n\n//.......................................................................................................\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ThemeContext } from '../context/ThemeContext';\nimport axios from 'axios';\nimport './OTPPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OTPPage = () => {\n  _s();\n  const {\n    theme\n  } = useContext(ThemeContext);\n  const {\n    otp\n  } = useParams(); // Extract OTP from the URL\n  const [message, setMessage] = useState('');\n  console.log('OTP extracted from URL:', otp); // Debugging log\n\n  useEffect(() => {\n    if (!otp) {\n      setMessage('OTP not found in the URL.');\n      return;\n    }\n\n    // Fetch location and verify OTP\n    navigator.geolocation.getCurrentPosition(async position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      console.log('Device location fetched:', {\n        latitude,\n        longitude\n      }); // Debugging log\n\n      try {\n        // Send OTP and device location to backend\n        const response = await axios.post('http://localhost:5000/api/users/verifyTransaction', {\n          otp: otp.toString(),\n          // Send the OTP extracted from the URL\n          latitude,\n          longitude\n        });\n        setMessage(response.data.message);\n      } catch (error) {\n        var _error$response, _error$response$data;\n        console.error('Error verifying transaction:', error); // Debugging log\n        setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error verifying transaction');\n      }\n    }, error => {\n      console.error('Geolocation error:', error); // Debugging log\n      setMessage('Failed to get location. Please enable GPS and try again.');\n    });\n  }, [otp]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `otp-page-container ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"OTP: \", otp]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(OTPPage, \"Sm24jT1HlhPgQX1zZISbahkGkJI=\", false, function () {\n  return [useParams];\n});\n_c = OTPPage;\nexport default OTPPage;\nvar _c;\n$RefreshReg$(_c, \"OTPPage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useParams","ThemeContext","axios","jsxDEV","_jsxDEV","OTPPage","_s","theme","otp","message","setMessage","console","log","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","response","post","toString","data","error","_error$response","_error$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/project1/otp-location-fraud-detection-frontend/otp-location-fraud-detection-frontend/src/components/OTPPage.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import './OTPPage.css';\r\n\r\n// const OTPPage = () => {\r\n//   const { otp } = useParams();\r\n//   const [message, setMessage] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     navigator.geolocation.getCurrentPosition(\r\n//       (position) => {\r\n//         setMessage(`OTP: ${otp} at location (${position.coords.latitude}, ${position.coords.longitude})`);\r\n//       },\r\n//       (error) => {\r\n//         setMessage('Failed to get location. Please enable GPS and try again.');\r\n//       }\r\n//     );\r\n//   }, [otp]);\r\n\r\n//   return (\r\n//     <div className=\"otp-page-container\">\r\n//       <h2>Your OTP</h2>\r\n//       <p>{message}</p>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default OTPPage;\r\n\r\n//..................................................................................\r\n\r\n// import React, { useState, useEffect, useContext } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import { ThemeContext } from '../context/ThemeContext';\r\n// import './OTPPage.css';\r\n\r\n// const OTPPage = () => {\r\n//   const { theme } = useContext(ThemeContext);\r\n//   const { otp } = useParams();\r\n//   const [message, setMessage] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     navigator.geolocation.getCurrentPosition(\r\n//       (position) => {\r\n//         setMessage(`OTP: ${otp} at location (${position.coords.latitude}, ${position.coords.longitude})`);\r\n//       },\r\n//       (error) => {\r\n//         setMessage('Failed to get location. Please enable GPS and try again.');\r\n//       }\r\n//     );\r\n//   }, [otp]);\r\n\r\n//   return (\r\n//     <div className={`otp-page-container ${theme}`}>\r\n//       <h2>Your OTP</h2>\r\n//       <p>{message}</p>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default OTPPage;\r\n\r\n//.......................................................................................................\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { ThemeContext } from '../context/ThemeContext';\r\nimport axios from 'axios';\r\nimport './OTPPage.css';\r\n\r\nconst OTPPage = () => {\r\n  const { theme } = useContext(ThemeContext);\r\n  const { otp } = useParams(); // Extract OTP from the URL\r\n  const [message, setMessage] = useState('');\r\n\r\n  console.log('OTP extracted from URL:', otp); // Debugging log\r\n\r\n  useEffect(() => {\r\n    if (!otp) {\r\n      setMessage('OTP not found in the URL.');\r\n      return;\r\n    }\r\n\r\n    // Fetch location and verify OTP\r\n    navigator.geolocation.getCurrentPosition(\r\n      async (position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        console.log('Device location fetched:', { latitude, longitude }); // Debugging log\r\n\r\n        try {\r\n          // Send OTP and device location to backend\r\n          const response = await axios.post('http://localhost:5000/api/users/verifyTransaction', {\r\n            otp: otp.toString(), // Send the OTP extracted from the URL\r\n            latitude,\r\n            longitude,\r\n          });\r\n          setMessage(response.data.message);\r\n        } catch (error) {\r\n          console.error('Error verifying transaction:', error); // Debugging log\r\n          setMessage(error.response?.data?.message || 'Error verifying transaction');\r\n        }\r\n      },\r\n      (error) => {\r\n        console.error('Geolocation error:', error); // Debugging log\r\n        setMessage('Failed to get location. Please enable GPS and try again.');\r\n      }\r\n    );\r\n  }, [otp]);\r\n\r\n  return (\r\n    <div className={`otp-page-container ${theme}`}>\r\n      <h2>Your OTP</h2>\r\n      <p>OTP: {otp}</p> {/* Display the OTP */}\r\n      <p>{message}</p> {/* Display the verification result */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OTPPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}